/*
* generated by Xtext
*/
grammar InternalDescription;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.uppaal.xml.description.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.uppaal.xml.description.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.uppaal.xml.description.services.DescriptionGrammarAccess;

}

@parser::members {

 	private DescriptionGrammarAccess grammarAccess;
 	
    public InternalDescriptionParser(TokenStream input, DescriptionGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Top";	
   	}
   	
   	@Override
   	protected DescriptionGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTop
entryRuleTop returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopRule()); }
	 iv_ruleTop=ruleTop 
	 { $current=$iv_ruleTop.current; } 
	 EOF 
;

// Rule Top
ruleTop returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='SYSTEM' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTopAccess().getSYSTEMKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUASystemDefinitionParserRuleCall_0_1()); 
    }
    this_UASystemDefinition_1=ruleUASystemDefinition
    { 
        $current = $this_UASystemDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_2='DECLARATIONS' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTopAccess().getDECLARATIONSKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUADeclarationsParserRuleCall_1_1()); 
    }
    this_UADeclarations_3=ruleUADeclarations
    { 
        $current = $this_UADeclarations_3.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_4='PARAMS' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTopAccess().getPARAMSKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUAParametersParserRuleCall_2_1()); 
    }
    this_UAParameters_5=ruleUAParameters
    { 
        $current = $this_UAParameters_5.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_6='EXPRESSION' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTopAccess().getEXPRESSIONKeyword_3_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUAExpressionParserRuleCall_3_1()); 
    }
    this_UAExpression_7=ruleUAExpression
    { 
        $current = $this_UAExpression_7.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_8='SELECT' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTopAccess().getSELECTKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUASelectListParserRuleCall_4_1()); 
    }
    this_UASelectList_9=ruleUASelectList
    { 
        $current = $this_UASelectList_9.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_10='UPDATE' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTopAccess().getUPDATEKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUAUpdateParserRuleCall_5_1()); 
    }
    this_UAUpdate_11=ruleUAUpdate
    { 
        $current = $this_UAUpdate_11.current; 
        afterParserOrEnumRuleCall();
    }
)
    |(	otherlv_12='SYNC' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTopAccess().getSYNCKeyword_6_0());
    }

    { 
        newCompositeNode(grammarAccess.getTopAccess().getUASynchronisationParserRuleCall_6_1()); 
    }
    this_UASynchronisation_13=ruleUASynchronisation
    { 
        $current = $this_UASynchronisation_13.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleUASystemDefinition
entryRuleUASystemDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASystemDefinitionRule()); }
	 iv_ruleUASystemDefinition=ruleUASystemDefinition 
	 { $current=$iv_ruleUASystemDefinition.current; } 
	 EOF 
;

// Rule UASystemDefinition
ruleUASystemDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUASystemDefinitionAccess().getUASystemDefinitionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getUASystemDefinitionAccess().getDefinitionsUADefinitionParserRuleCall_1_0_0()); 
	    }
		lv_definitions_1_0=ruleUADefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASystemDefinitionRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_1_0, 
        		"UADefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUASystemDefinitionAccess().getSemicolonKeyword_1_1());
    }
)?)*((
(
		{ 
	        newCompositeNode(grammarAccess.getUASystemDefinitionAccess().getSystemUASystemParserRuleCall_2_0_0()); 
	    }
		lv_system_3_0=ruleUASystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASystemDefinitionRule());
	        }
       		set(
       			$current, 
       			"system",
        		lv_system_3_0, 
        		"UASystem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUASystemDefinitionAccess().getSemicolonKeyword_2_1());
    }
)?)?)
;





// Entry rule entryRuleUADefinition
entryRuleUADefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUADefinitionRule()); }
	 iv_ruleUADefinition=ruleUADefinition 
	 { $current=$iv_ruleUADefinition.current; } 
	 EOF 
;

// Rule UADefinition
ruleUADefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUADefinitionAccess().getUADeclarationParserRuleCall_0()); 
    }
    this_UADeclaration_0=ruleUADeclaration
    { 
        $current = $this_UADeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUADefinitionAccess().getUAInstantiationParserRuleCall_1()); 
    }
    this_UAInstantiation_1=ruleUAInstantiation
    { 
        $current = $this_UAInstantiation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUAInstantiation
entryRuleUAInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAInstantiationRule()); }
	 iv_ruleUAInstantiation=ruleUAInstantiation 
	 { $current=$iv_ruleUAInstantiation.current; } 
	 EOF 
;

// Rule UAInstantiation
ruleUAInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUAInstantiationAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAInstantiationAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAInstantiationAccess().getParametersUAParametersParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleUAParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAInstantiationRule());
	        }
       		set(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"UAParameters");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUAInstantiationAccess().getRightParenthesisKeyword_1_2());
    }
)?(	otherlv_4=':=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAInstantiationAccess().getColonEqualsSignKeyword_2_0());
    }

    |	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUAInstantiationAccess().getEqualsSignKeyword_2_1());
    }
)(
(
		lv_target_6_0=RULE_ID
		{
			newLeafNode(lv_target_6_0, grammarAccess.getUAInstantiationAccess().getTargetIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"target",
        		lv_target_6_0, 
        		"ID");
	    }

)
)	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUAInstantiationAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAInstantiationAccess().getArgumentsUAExpressionParserRuleCall_5_0()); 
	    }
		lv_arguments_8_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAInstantiationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_8_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUAInstantiationAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAInstantiationAccess().getArgumentsUAExpressionParserRuleCall_6_1_0()); 
	    }
		lv_arguments_10_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAInstantiationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUAInstantiationAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleUASystem
entryRuleUASystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASystemRule()); }
	 iv_ruleUASystem=ruleUASystem 
	 { $current=$iv_ruleUASystem.current; } 
	 EOF 
;

// Rule UASystem
ruleUASystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUASystemAccess().getSystemKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUASystemAccess().getSystemsUASystemIDParserRuleCall_1_0()); 
	    }
		lv_systems_1_0=ruleUASystemID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASystemRule());
	        }
       		add(
       			$current, 
       			"systems",
        		lv_systems_1_0, 
        		"UASystemID");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUASystemAccess().getCommaKeyword_2_0_0());
    }

    |	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUASystemAccess().getLessThanSignKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUASystemAccess().getSystemsUASystemIDParserRuleCall_2_1_0()); 
	    }
		lv_systems_4_0=ruleUASystemID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASystemRule());
	        }
       		add(
       			$current, 
       			"systems",
        		lv_systems_4_0, 
        		"UASystemID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUASystemID
entryRuleUASystemID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASystemIDRule()); }
	 iv_ruleUASystemID=ruleUASystemID 
	 { $current=$iv_ruleUASystemID.current; } 
	 EOF 
;

// Rule UASystemID
ruleUASystemID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUASystemIDAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUASystemIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleUAArrayDeclaration
entryRuleUAArrayDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAArrayDeclarationRule()); }
	 iv_ruleUAArrayDeclaration=ruleUAArrayDeclaration 
	 { $current=$iv_ruleUAArrayDeclaration.current; } 
	 EOF 
;

// Rule UAArrayDeclaration
ruleUAArrayDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUAArrayDeclarationAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAArrayDeclarationAccess().getSizeUAExpressionParserRuleCall_1_0()); 
	    }
		lv_size_1_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAArrayDeclarationRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_1_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAArrayDeclarationAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleUADeclarations
entryRuleUADeclarations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUADeclarationsRule()); }
	 iv_ruleUADeclarations=ruleUADeclarations 
	 { $current=$iv_ruleUADeclarations.current; } 
	 EOF 
;

// Rule UADeclarations
ruleUADeclarations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUADeclarationsAccess().getDeclarationsUADeclarationParserRuleCall_0_0()); 
	    }
		lv_declarations_0_0=ruleUADeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUADeclarationsRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_0_0, 
        		"UADeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUADeclarationsAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUADeclarationsAccess().getDeclarationsUADeclarationParserRuleCall_1_1_0()); 
	    }
		lv_declarations_2_0=ruleUADeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUADeclarationsRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_2_0, 
        		"UADeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUADeclarationsAccess().getSemicolonKeyword_2());
    }
)?)
;





// Entry rule entryRuleUADeclaration
entryRuleUADeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUADeclarationRule()); }
	 iv_ruleUADeclaration=ruleUADeclaration 
	 { $current=$iv_ruleUADeclaration.current; } 
	 EOF 
;

// Rule UADeclaration
ruleUADeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUADeclarationAccess().getUAVariableDeclarationParserRuleCall_0()); 
    }
    this_UAVariableDeclaration_0=ruleUAVariableDeclaration
    { 
        $current = $this_UAVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUADeclarationAccess().getUATypeDeclarationParserRuleCall_1()); 
    }
    this_UATypeDeclaration_1=ruleUATypeDeclaration
    { 
        $current = $this_UATypeDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUAType
entryRuleUAType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUATypeRule()); }
	 iv_ruleUAType=ruleUAType 
	 { $current=$iv_ruleUAType.current; } 
	 EOF 
;

// Rule UAType
ruleUAType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeAccess().getModifiersUATypeModifiersParserRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleUATypeModifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeRule());
	        }
       		set(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"UATypeModifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeAccess().getIdentifierUATypeIdentifierParserRuleCall_1_0()); 
	    }
		lv_identifier_1_0=ruleUATypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"UATypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUATypeModifiers
entryRuleUATypeModifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUATypeModifiersRule()); }
	 iv_ruleUATypeModifiers=ruleUATypeModifiers 
	 { $current=$iv_ruleUATypeModifiers.current; } 
	 EOF 
;

// Rule UATypeModifiers
ruleUATypeModifiers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUATypeModifiersAccess().getUATypeModifiersAction_0(),
            $current);
    }
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 0);
	 				}
					({true}?=>(
(
		lv_urgent_2_0=	'urgent' 
    {
        newLeafNode(lv_urgent_2_0, grammarAccess.getUATypeModifiersAccess().getUrgentUrgentKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeModifiersRule());
	        }
       		setWithLastConsumed($current, "urgent", true, "urgent");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 1);
	 				}
					({true}?=>(
(
		lv_broadcast_3_0=	'broadcast' 
    {
        newLeafNode(lv_broadcast_3_0, grammarAccess.getUATypeModifiersAccess().getBroadcastBroadcastKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeModifiersRule());
	        }
       		setWithLastConsumed($current, "broadcast", true, "broadcast");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 2);
	 				}
					({true}?=>(
(
		lv_meta_4_0=	'meta' 
    {
        newLeafNode(lv_meta_4_0, grammarAccess.getUATypeModifiersAccess().getMetaMetaKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeModifiersRule());
	        }
       		setWithLastConsumed($current, "meta", true, "meta");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1(), 3);
	 				}
					({true}?=>(
(
		lv_const_5_0=	'const' 
    {
        newLeafNode(lv_const_5_0, grammarAccess.getUATypeModifiersAccess().getConstConstKeyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeModifiersRule());
	        }
       		setWithLastConsumed($current, "const", true, "const");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getUATypeModifiersAccess().getUnorderedGroup_1());
	}

))
;





// Entry rule entryRuleUAVariableDeclaration
entryRuleUAVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAVariableDeclarationRule()); }
	 iv_ruleUAVariableDeclaration=ruleUAVariableDeclaration 
	 { $current=$iv_ruleUAVariableDeclaration.current; } 
	 EOF 
;

// Rule UAVariableDeclaration
ruleUAVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUAVariableDeclarationAccess().getTypeUATypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUAVariableDeclarationAccess().getVariablesUAVariableIDParserRuleCall_1_0()); 
	    }
		lv_variables_1_0=ruleUAVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAVariableDeclarationRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_1_0, 
        		"UAVariableID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAVariableDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAVariableDeclarationAccess().getVariablesUAVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_variables_3_0=ruleUAVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAVariableDeclarationRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_3_0, 
        		"UAVariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAVariableID
entryRuleUAVariableID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAVariableIDRule()); }
	 iv_ruleUAVariableID=ruleUAVariableID 
	 { $current=$iv_ruleUAVariableID.current; } 
	 EOF 
;

// Rule UAVariableID
ruleUAVariableID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUAVariableIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAVariableIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUAVariableIDAccess().getDimensionsUAArrayDeclarationParserRuleCall_1_0()); 
	    }
		lv_dimensions_1_0=ruleUAArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAVariableIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_1_0, 
        		"UAArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAVariableIDAccess().getEqualsSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAVariableIDAccess().getInitialiserUAInitialiserParserRuleCall_2_1_0()); 
	    }
		lv_initialiser_3_0=ruleUAInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAVariableIDRule());
	        }
       		set(
       			$current, 
       			"initialiser",
        		lv_initialiser_3_0, 
        		"UAInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleUAInitialiser
entryRuleUAInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAInitialiserRule()); }
	 iv_ruleUAInitialiser=ruleUAInitialiser 
	 { $current=$iv_ruleUAInitialiser.current; } 
	 EOF 
;

// Rule UAInitialiser
ruleUAInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAInitialiserAccess().getUASingleInitialiserParserRuleCall_0()); 
    }
    this_UASingleInitialiser_0=ruleUASingleInitialiser
    { 
        $current = $this_UASingleInitialiser_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUAInitialiserAccess().getUAMultiInitialiserParserRuleCall_1()); 
    }
    this_UAMultiInitialiser_1=ruleUAMultiInitialiser
    { 
        $current = $this_UAMultiInitialiser_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUASingleInitialiser
entryRuleUASingleInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASingleInitialiserRule()); }
	 iv_ruleUASingleInitialiser=ruleUASingleInitialiser 
	 { $current=$iv_ruleUASingleInitialiser.current; } 
	 EOF 
;

// Rule UASingleInitialiser
ruleUASingleInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getUASingleInitialiserAccess().getExpressionUAExpressionParserRuleCall_0()); 
	    }
		lv_expression_0_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASingleInitialiserRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleUAMultiInitialiser
entryRuleUAMultiInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAMultiInitialiserRule()); }
	 iv_ruleUAMultiInitialiser=ruleUAMultiInitialiser 
	 { $current=$iv_ruleUAMultiInitialiser.current; } 
	 EOF 
;

// Rule UAMultiInitialiser
ruleUAMultiInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUAMultiInitialiserAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAMultiInitialiserAccess().getInitialisersUAInitialiserParserRuleCall_1_0()); 
	    }
		lv_initialisers_1_0=ruleUAInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAMultiInitialiserRule());
	        }
       		add(
       			$current, 
       			"initialisers",
        		lv_initialisers_1_0, 
        		"UAInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAMultiInitialiserAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAMultiInitialiserAccess().getInitialisersUAInitialiserParserRuleCall_2_1_0()); 
	    }
		lv_initialisers_3_0=ruleUAInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAMultiInitialiserRule());
	        }
       		add(
       			$current, 
       			"initialisers",
        		lv_initialisers_3_0, 
        		"UAInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAMultiInitialiserAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleUATypeDeclaration
entryRuleUATypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUATypeDeclarationRule()); }
	 iv_ruleUATypeDeclaration=ruleUATypeDeclaration 
	 { $current=$iv_ruleUATypeDeclaration.current; } 
	 EOF 
;

// Rule UATypeDeclaration
ruleUATypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='typedef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUATypeDeclarationAccess().getTypedefKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeDeclarationAccess().getBaseTypeUATypeParserRuleCall_1_0()); 
	    }
		lv_baseType_1_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"baseType",
        		lv_baseType_1_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeDeclarationAccess().getTypesUATypeIDParserRuleCall_2_0()); 
	    }
		lv_types_2_0=ruleUATypeID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_2_0, 
        		"UATypeID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUATypeDeclarationAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeDeclarationAccess().getTypesUATypeIDParserRuleCall_3_1_0()); 
	    }
		lv_types_4_0=ruleUATypeID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"UATypeID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUATypeID
entryRuleUATypeID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUATypeIDRule()); }
	 iv_ruleUATypeID=ruleUATypeID 
	 { $current=$iv_ruleUATypeID.current; } 
	 EOF 
;

// Rule UATypeID
ruleUATypeID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUATypeIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUATypeIDAccess().getDimensionsUAArrayDeclarationParserRuleCall_1_0()); 
	    }
		lv_dimensions_1_0=ruleUAArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUATypeIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_1_0, 
        		"UAArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleUATypeIdentifier
entryRuleUATypeIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUATypeIdentifierRule()); }
	 iv_ruleUATypeIdentifier=ruleUATypeIdentifier 
	 { $current=$iv_ruleUATypeIdentifier.current; } 
	 EOF 
;

// Rule UATypeIdentifier
ruleUATypeIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUAIntegerTypeParserRuleCall_0()); 
    }
    this_UAIntegerType_0=ruleUAIntegerType
    { 
        $current = $this_UAIntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUAClockTypeParserRuleCall_1()); 
    }
    this_UAClockType_1=ruleUAClockType
    { 
        $current = $this_UAClockType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUAChannelTypeParserRuleCall_2()); 
    }
    this_UAChannelType_2=ruleUAChannelType
    { 
        $current = $this_UAChannelType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUABooleanTypeParserRuleCall_3()); 
    }
    this_UABooleanType_3=ruleUABooleanType
    { 
        $current = $this_UABooleanType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUAScalarTypeParserRuleCall_4()); 
    }
    this_UAScalarType_4=ruleUAScalarType
    { 
        $current = $this_UAScalarType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUATypeIdentifierAccess().getUAStructTypeParserRuleCall_5()); 
    }
    this_UAStructType_5=ruleUAStructType
    { 
        $current = $this_UAStructType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUATypeIdentifierAccess().getUAUserTypeAction_6_0(),
            $current);
    }
)(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getUATypeIdentifierAccess().getNameIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUATypeIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleUAIntegerType
entryRuleUAIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAIntegerTypeRule()); }
	 iv_ruleUAIntegerType=ruleUAIntegerType 
	 { $current=$iv_ruleUAIntegerType.current; } 
	 EOF 
;

// Rule UAIntegerType
ruleUAIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAIntegerTypeAccess().getUAIntegerTypeAction_0(),
            $current);
    }
)	otherlv_1='int' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAIntegerTypeAccess().getIntKeyword_1());
    }
(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAIntegerTypeAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAIntegerTypeAccess().getMinUAExpressionParserRuleCall_2_1_0()); 
	    }
		lv_min_3_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_3_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAIntegerTypeAccess().getCommaKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAIntegerTypeAccess().getMaxUAExpressionParserRuleCall_2_3_0()); 
	    }
		lv_max_5_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_5_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUAIntegerTypeAccess().getRightSquareBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleUAClockType
entryRuleUAClockType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAClockTypeRule()); }
	 iv_ruleUAClockType=ruleUAClockType 
	 { $current=$iv_ruleUAClockType.current; } 
	 EOF 
;

// Rule UAClockType
ruleUAClockType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAClockTypeAccess().getUAClockTypeAction_0(),
            $current);
    }
)	otherlv_1='clock' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAClockTypeAccess().getClockKeyword_1());
    }
)
;





// Entry rule entryRuleUAChannelType
entryRuleUAChannelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAChannelTypeRule()); }
	 iv_ruleUAChannelType=ruleUAChannelType 
	 { $current=$iv_ruleUAChannelType.current; } 
	 EOF 
;

// Rule UAChannelType
ruleUAChannelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAChannelTypeAccess().getUAChannelTypeAction_0(),
            $current);
    }
)	otherlv_1='chan' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAChannelTypeAccess().getChanKeyword_1());
    }
)
;





// Entry rule entryRuleUABooleanType
entryRuleUABooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABooleanTypeRule()); }
	 iv_ruleUABooleanType=ruleUABooleanType 
	 { $current=$iv_ruleUABooleanType.current; } 
	 EOF 
;

// Rule UABooleanType
ruleUABooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUABooleanTypeAccess().getUABooleanTypeAction_0(),
            $current);
    }
)	otherlv_1='bool' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUABooleanTypeAccess().getBoolKeyword_1());
    }
)
;





// Entry rule entryRuleUAScalarType
entryRuleUAScalarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAScalarTypeRule()); }
	 iv_ruleUAScalarType=ruleUAScalarType 
	 { $current=$iv_ruleUAScalarType.current; } 
	 EOF 
;

// Rule UAScalarType
ruleUAScalarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAScalarTypeAccess().getUAScalarTypeAction_0(),
            $current);
    }
)	otherlv_1='scalar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAScalarTypeAccess().getScalarKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAScalarTypeAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAScalarTypeAccess().getSizeUAExpressionParserRuleCall_3_0()); 
	    }
		lv_size_3_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAScalarTypeRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAScalarTypeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleUAStructType
entryRuleUAStructType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAStructTypeRule()); }
	 iv_ruleUAStructType=ruleUAStructType 
	 { $current=$iv_ruleUAStructType.current; } 
	 EOF 
;

// Rule UAStructType
ruleUAStructType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAStructTypeAccess().getUAStructTypeAction_0(),
            $current);
    }
)	otherlv_1='struct' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAStructTypeAccess().getStructKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAStructTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAStructTypeAccess().getDeclarationsUAFieldDeclarationParserRuleCall_3_0()); 
	    }
		lv_declarations_3_0=ruleUAFieldDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAStructTypeRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_3_0, 
        		"UAFieldDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAStructTypeAccess().getSemicolonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAStructTypeAccess().getDeclarationsUAFieldDeclarationParserRuleCall_4_1_0()); 
	    }
		lv_declarations_5_0=ruleUAFieldDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAStructTypeRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_5_0, 
        		"UAFieldDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUAStructTypeAccess().getSemicolonKeyword_5());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUAStructTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleUAFieldDeclaration
entryRuleUAFieldDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAFieldDeclarationRule()); }
	 iv_ruleUAFieldDeclaration=ruleUAFieldDeclaration 
	 { $current=$iv_ruleUAFieldDeclaration.current; } 
	 EOF 
;

// Rule UAFieldDeclaration
ruleUAFieldDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUAFieldDeclarationAccess().getTypeUATypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAFieldDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUAFieldDeclarationAccess().getFieldsUAFieldIDParserRuleCall_1_0()); 
	    }
		lv_fields_1_0=ruleUAFieldID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAFieldDeclarationRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"UAFieldID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAFieldDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAFieldDeclarationAccess().getFieldsUAFieldIDParserRuleCall_2_1_0()); 
	    }
		lv_fields_3_0=ruleUAFieldID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAFieldDeclarationRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_3_0, 
        		"UAFieldID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAFieldID
entryRuleUAFieldID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAFieldIDRule()); }
	 iv_ruleUAFieldID=ruleUAFieldID 
	 { $current=$iv_ruleUAFieldID.current; } 
	 EOF 
;

// Rule UAFieldID
ruleUAFieldID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUAFieldIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAFieldIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUAFieldIDAccess().getDimensionsUAArrayDeclarationParserRuleCall_1_0()); 
	    }
		lv_dimensions_1_0=ruleUAArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAFieldIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_1_0, 
        		"UAArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleUAParameters
entryRuleUAParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAParametersRule()); }
	 iv_ruleUAParameters=ruleUAParameters 
	 { $current=$iv_ruleUAParameters.current; } 
	 EOF 
;

// Rule UAParameters
ruleUAParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUAParametersAccess().getParametersUAParameterParserRuleCall_0_0()); 
	    }
		lv_parameters_0_0=ruleUAParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAParametersRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"UAParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUAParametersAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAParametersAccess().getParametersUAParameterParserRuleCall_1_1_0()); 
	    }
		lv_parameters_2_0=ruleUAParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAParametersRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"UAParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAParameter
entryRuleUAParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAParameterRule()); }
	 iv_ruleUAParameter=ruleUAParameter 
	 { $current=$iv_ruleUAParameter.current; } 
	 EOF 
;

// Rule UAParameter
ruleUAParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUAParameterAccess().getTypeUATypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_byReference_1_0=	'&' 
    {
        newLeafNode(lv_byReference_1_0, grammarAccess.getUAParameterAccess().getByReferenceAmpersandKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAParameterRule());
	        }
       		setWithLastConsumed($current, "byReference", true, "&");
	    }

)
)?(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getUAParameterAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUAParameterAccess().getDimensionsUAArrayDeclarationParserRuleCall_3_0()); 
	    }
		lv_dimensions_3_0=ruleUAArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAParameterRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_3_0, 
        		"UAArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleUAExpression
entryRuleUAExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAExpressionRule()); }
	 iv_ruleUAExpression=ruleUAExpression 
	 { $current=$iv_ruleUAExpression.current; } 
	 EOF 
;

// Rule UAExpression
ruleUAExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAExpressionAccess().getUAImplyLogicOrExpressionParserRuleCall_0()); 
    }
    this_UAImplyLogicOrExpression_0=ruleUAImplyLogicOrExpression
    { 
        $current = $this_UAImplyLogicOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAExpressionAccess().getUAForallExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='forall' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAExpressionAccess().getForallKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAExpressionAccess().getUAExistsExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='exists' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAExpressionAccess().getExistsKeyword_1_0_1_1());
    }
))	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUAExpressionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getUAExpressionAccess().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUAExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAExpressionAccess().getTypeUATypeParserRuleCall_1_4_0()); 
	    }
		lv_type_8_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUAExpressionAccess().getRightParenthesisKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAExpressionAccess().getExpressionUAExpressionParserRuleCall_1_6_0()); 
	    }
		lv_expression_10_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_10_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleUAImplyLogicOrExpression
entryRuleUAImplyLogicOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAImplyLogicOrExpressionRule()); }
	 iv_ruleUAImplyLogicOrExpression=ruleUAImplyLogicOrExpression 
	 { $current=$iv_ruleUAImplyLogicOrExpression.current; } 
	 EOF 
;

// Rule UAImplyLogicOrExpression
ruleUAImplyLogicOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAImplyLogicOrExpressionAccess().getUALogicAndExpression1ParserRuleCall_0()); 
    }
    this_UALogicAndExpression1_0=ruleUALogicAndExpression1
    { 
        $current = $this_UALogicAndExpression1_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAImplyLogicOrExpressionAccess().getUAImplyExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='imply' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAImplyLogicOrExpressionAccess().getImplyKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAImplyLogicOrExpressionAccess().getUALogicOrExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='or' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAImplyLogicOrExpressionAccess().getOrKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAImplyLogicOrExpressionAccess().getRightUALogicAndExpression1ParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleUALogicAndExpression1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAImplyLogicOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"UALogicAndExpression1");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUALogicAndExpression1
entryRuleUALogicAndExpression1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUALogicAndExpression1Rule()); }
	 iv_ruleUALogicAndExpression1=ruleUALogicAndExpression1 
	 { $current=$iv_ruleUALogicAndExpression1.current; } 
	 EOF 
;

// Rule UALogicAndExpression1
ruleUALogicAndExpression1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUALogicAndExpression1Access().getUALogicNotExpression1ParserRuleCall_0()); 
    }
    this_UALogicNotExpression1_0=ruleUALogicNotExpression1
    { 
        $current = $this_UALogicNotExpression1_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUALogicAndExpression1Access().getUALogicAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='and' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUALogicAndExpression1Access().getAndKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUALogicAndExpression1Access().getRightUALogicNotExpression1ParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUALogicNotExpression1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUALogicAndExpression1Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UALogicNotExpression1");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUALogicNotExpression1
entryRuleUALogicNotExpression1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUALogicNotExpression1Rule()); }
	 iv_ruleUALogicNotExpression1=ruleUALogicNotExpression1 
	 { $current=$iv_ruleUALogicNotExpression1.current; } 
	 EOF 
;

// Rule UALogicNotExpression1
ruleUALogicNotExpression1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getUALogicNotExpression1Access().getUAAssignmentExpressionParserRuleCall()); 
    }
    this_UAAssignmentExpression_0=ruleUAAssignmentExpression
    { 
        $current = $this_UAAssignmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleUAAssignmentExpression
entryRuleUAAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAAssignmentExpressionRule()); }
	 iv_ruleUAAssignmentExpression=ruleUAAssignmentExpression 
	 { $current=$iv_ruleUAAssignmentExpression.current; } 
	 EOF 
;

// Rule UAAssignmentExpression
ruleUAAssignmentExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAAssignmentExpressionAccess().getUAConditionalExpressionParserRuleCall_0()); 
    }
    this_UAConditionalExpression_0=ruleUAConditionalExpression
    { 
        $current = $this_UAConditionalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUAAssignmentExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAAssignmentExpressionAccess().getEqualsSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUAAssignmentExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4=':=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAAssignmentExpressionAccess().getColonEqualsSignKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUAAdditionAssignmentExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='+=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUAAssignmentExpressionAccess().getPlusSignEqualsSignKeyword_1_0_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUASubtractionAssignmentExpressionLeftAction_1_0_3_0(),
            $current);
    }
)	otherlv_8='-=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUAAssignmentExpressionAccess().getHyphenMinusEqualsSignKeyword_1_0_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUAMultiplicationAssignmentExpressionLeftAction_1_0_4_0(),
            $current);
    }
)	otherlv_10='*=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getUAAssignmentExpressionAccess().getAsteriskEqualsSignKeyword_1_0_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUADivisionAssignmentExpressionLeftAction_1_0_5_0(),
            $current);
    }
)	otherlv_12='/=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getUAAssignmentExpressionAccess().getSolidusEqualsSignKeyword_1_0_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUAModuloAssignmentExpressionLeftAction_1_0_6_0(),
            $current);
    }
)	otherlv_14='%=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getUAAssignmentExpressionAccess().getPercentSignEqualsSignKeyword_1_0_6_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUABitOrAssignmentExpressionLeftAction_1_0_7_0(),
            $current);
    }
)	otherlv_16='|=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getUAAssignmentExpressionAccess().getVerticalLineEqualsSignKeyword_1_0_7_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUABitAndAssignmentExpressionLeftAction_1_0_8_0(),
            $current);
    }
)	otherlv_18='&=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getUAAssignmentExpressionAccess().getAmpersandEqualsSignKeyword_1_0_8_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUABitXORAssignmentExpressionLeftAction_1_0_9_0(),
            $current);
    }
)	otherlv_20='^=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getUAAssignmentExpressionAccess().getCircumflexAccentEqualsSignKeyword_1_0_9_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUABitLeftAssignmentExpressionLeftAction_1_0_10_0(),
            $current);
    }
)	otherlv_22='<<=' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getUAAssignmentExpressionAccess().getLessThanSignLessThanSignEqualsSignKeyword_1_0_10_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAssignmentExpressionAccess().getUABitRightAssignmentExpressionLeftAction_1_0_11_0(),
            $current);
    }
)	otherlv_24='>>=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getUAAssignmentExpressionAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0_11_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAAssignmentExpressionAccess().getRightUAAssignmentExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_25_0=ruleUAAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_25_0, 
        		"UAAssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleUAConditionalExpression
entryRuleUAConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAConditionalExpressionRule()); }
	 iv_ruleUAConditionalExpression=ruleUAConditionalExpression 
	 { $current=$iv_ruleUAConditionalExpression.current; } 
	 EOF 
;

// Rule UAConditionalExpression
ruleUAConditionalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAConditionalExpressionAccess().getUALogicOrExpression2ParserRuleCall_0()); 
    }
    this_UALogicOrExpression2_0=ruleUALogicOrExpression2
    { 
        $current = $this_UALogicOrExpression2_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAConditionalExpressionAccess().getUAConditionalExpressionConditionAction_1_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAConditionalExpressionAccess().getQuestionMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAConditionalExpressionAccess().getThenUALogicOrExpression2ParserRuleCall_1_2_0()); 
	    }
		lv_then_3_0=ruleUALogicOrExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"UALogicOrExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAConditionalExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAConditionalExpressionAccess().getElseUAConditionalExpressionParserRuleCall_1_4_0()); 
	    }
		lv_else_5_0=ruleUAConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_5_0, 
        		"UAConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleUALogicOrExpression2
entryRuleUALogicOrExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUALogicOrExpression2Rule()); }
	 iv_ruleUALogicOrExpression2=ruleUALogicOrExpression2 
	 { $current=$iv_ruleUALogicOrExpression2.current; } 
	 EOF 
;

// Rule UALogicOrExpression2
ruleUALogicOrExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUALogicOrExpression2Access().getUALogicAndExpression2ParserRuleCall_0()); 
    }
    this_UALogicAndExpression2_0=ruleUALogicAndExpression2
    { 
        $current = $this_UALogicAndExpression2_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUALogicOrExpression2Access().getUALogicOrExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUALogicOrExpression2Access().getVerticalLineVerticalLineKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUALogicOrExpression2Access().getRightUALogicAndExpression2ParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUALogicAndExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUALogicOrExpression2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UALogicAndExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUALogicAndExpression2
entryRuleUALogicAndExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUALogicAndExpression2Rule()); }
	 iv_ruleUALogicAndExpression2=ruleUALogicAndExpression2 
	 { $current=$iv_ruleUALogicAndExpression2.current; } 
	 EOF 
;

// Rule UALogicAndExpression2
ruleUALogicAndExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUALogicAndExpression2Access().getUABitOrExpressionParserRuleCall_0()); 
    }
    this_UABitOrExpression_0=ruleUABitOrExpression
    { 
        $current = $this_UABitOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUALogicAndExpression2Access().getUALogicAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUALogicAndExpression2Access().getAmpersandAmpersandKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUALogicAndExpression2Access().getRightUABitOrExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUABitOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUALogicAndExpression2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UABitOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUABitOrExpression
entryRuleUABitOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABitOrExpressionRule()); }
	 iv_ruleUABitOrExpression=ruleUABitOrExpression 
	 { $current=$iv_ruleUABitOrExpression.current; } 
	 EOF 
;

// Rule UABitOrExpression
ruleUABitOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUABitOrExpressionAccess().getUABitXORExpressionParserRuleCall_0()); 
    }
    this_UABitXORExpression_0=ruleUABitXORExpression
    { 
        $current = $this_UABitXORExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUABitOrExpressionAccess().getUABitOrExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUABitOrExpressionAccess().getVerticalLineKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUABitOrExpressionAccess().getRightUABitXORExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUABitXORExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUABitOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UABitXORExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUABitXORExpression
entryRuleUABitXORExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABitXORExpressionRule()); }
	 iv_ruleUABitXORExpression=ruleUABitXORExpression 
	 { $current=$iv_ruleUABitXORExpression.current; } 
	 EOF 
;

// Rule UABitXORExpression
ruleUABitXORExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUABitXORExpressionAccess().getUABitAndExpressionParserRuleCall_0()); 
    }
    this_UABitAndExpression_0=ruleUABitAndExpression
    { 
        $current = $this_UABitAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUABitXORExpressionAccess().getUABitXORExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='^' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUABitXORExpressionAccess().getCircumflexAccentKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUABitXORExpressionAccess().getRightUABitAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUABitAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUABitXORExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UABitAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUABitAndExpression
entryRuleUABitAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABitAndExpressionRule()); }
	 iv_ruleUABitAndExpression=ruleUABitAndExpression 
	 { $current=$iv_ruleUABitAndExpression.current; } 
	 EOF 
;

// Rule UABitAndExpression
ruleUABitAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUABitAndExpressionAccess().getUAEqualityExpressionParserRuleCall_0()); 
    }
    this_UAEqualityExpression_0=ruleUAEqualityExpression
    { 
        $current = $this_UAEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUABitAndExpressionAccess().getUABitAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUABitAndExpressionAccess().getAmpersandKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUABitAndExpressionAccess().getRightUAEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleUAEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUABitAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UAEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAEqualityExpression
entryRuleUAEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAEqualityExpressionRule()); }
	 iv_ruleUAEqualityExpression=ruleUAEqualityExpression 
	 { $current=$iv_ruleUAEqualityExpression.current; } 
	 EOF 
;

// Rule UAEqualityExpression
ruleUAEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAEqualityExpressionAccess().getUAInequalityExpressionParserRuleCall_0()); 
    }
    this_UAInequalityExpression_0=ruleUAInequalityExpression
    { 
        $current = $this_UAInequalityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAEqualityExpressionAccess().getUAEqualExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAEqualityExpressionAccess().getUAUnequalExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='!=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAEqualityExpressionAccess().getRightUAInequalityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleUAInequalityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"UAInequalityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAInequalityExpression
entryRuleUAInequalityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAInequalityExpressionRule()); }
	 iv_ruleUAInequalityExpression=ruleUAInequalityExpression 
	 { $current=$iv_ruleUAInequalityExpression.current; } 
	 EOF 
;

// Rule UAInequalityExpression
ruleUAInequalityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAInequalityExpressionAccess().getUAMinMaxExpressionParserRuleCall_0()); 
    }
    this_UAMinMaxExpression_0=ruleUAMinMaxExpression
    { 
        $current = $this_UAMinMaxExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAInequalityExpressionAccess().getUALessExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAInequalityExpressionAccess().getLessThanSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAInequalityExpressionAccess().getUALessEqualExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='<=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAInequalityExpressionAccess().getLessThanSignEqualsSignKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAInequalityExpressionAccess().getUAGreaterEqualExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='>=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUAInequalityExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAInequalityExpressionAccess().getUAGreaterExpressionLeftAction_1_0_3_0(),
            $current);
    }
)	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUAInequalityExpressionAccess().getGreaterThanSignKeyword_1_0_3_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAInequalityExpressionAccess().getRightUAMinMaxExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_9_0=ruleUAMinMaxExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAInequalityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"UAMinMaxExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAMinMaxExpression
entryRuleUAMinMaxExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAMinMaxExpressionRule()); }
	 iv_ruleUAMinMaxExpression=ruleUAMinMaxExpression 
	 { $current=$iv_ruleUAMinMaxExpression.current; } 
	 EOF 
;

// Rule UAMinMaxExpression
ruleUAMinMaxExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAMinMaxExpressionAccess().getUABitLeftBRightExpressionParserRuleCall_0()); 
    }
    this_UABitLeftBRightExpression_0=ruleUABitLeftBRightExpression
    { 
        $current = $this_UABitLeftBRightExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAMinMaxExpressionAccess().getUAMinExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAMinMaxExpressionAccess().getLessThanSignQuestionMarkKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAMinMaxExpressionAccess().getUAMaxExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='>?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAMinMaxExpressionAccess().getGreaterThanSignQuestionMarkKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAMinMaxExpressionAccess().getRightUABitLeftBRightExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleUABitLeftBRightExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAMinMaxExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"UABitLeftBRightExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUABitLeftBRightExpression
entryRuleUABitLeftBRightExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABitLeftBRightExpressionRule()); }
	 iv_ruleUABitLeftBRightExpression=ruleUABitLeftBRightExpression 
	 { $current=$iv_ruleUABitLeftBRightExpression.current; } 
	 EOF 
;

// Rule UABitLeftBRightExpression
ruleUABitLeftBRightExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUABitLeftBRightExpressionAccess().getUAAdditiveExpressionParserRuleCall_0()); 
    }
    this_UAAdditiveExpression_0=ruleUAAdditiveExpression
    { 
        $current = $this_UAAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUABitLeftBRightExpressionAccess().getUABitLeftExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUABitLeftBRightExpressionAccess().getLessThanSignLessThanSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUABitLeftBRightExpressionAccess().getUABitRightExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='>>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUABitLeftBRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUABitLeftBRightExpressionAccess().getRightUAAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleUAAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUABitLeftBRightExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"UAAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAAdditiveExpression
entryRuleUAAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAAdditiveExpressionRule()); }
	 iv_ruleUAAdditiveExpression=ruleUAAdditiveExpression 
	 { $current=$iv_ruleUAAdditiveExpression.current; } 
	 EOF 
;

// Rule UAAdditiveExpression
ruleUAAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAAdditiveExpressionAccess().getUAMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_UAMultiplicativeExpression_0=ruleUAMultiplicativeExpression
    { 
        $current = $this_UAMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAdditiveExpressionAccess().getUAAddExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAAdditiveExpressionAccess().getPlusSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAAdditiveExpressionAccess().getUASubtractExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAAdditiveExpressionAccess().getHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAAdditiveExpressionAccess().getRightUAMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleUAMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"UAMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAMultiplicativeExpression
entryRuleUAMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAMultiplicativeExpressionRule()); }
	 iv_ruleUAMultiplicativeExpression=ruleUAMultiplicativeExpression 
	 { $current=$iv_ruleUAMultiplicativeExpression.current; } 
	 EOF 
;

// Rule UAMultiplicativeExpression
ruleUAMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAMultiplicativeExpressionAccess().getUAPrefixExpressionParserRuleCall_0()); 
    }
    this_UAPrefixExpression_0=ruleUAPrefixExpression
    { 
        $current = $this_UAPrefixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAMultiplicativeExpressionAccess().getUAMultiplyExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAMultiplicativeExpressionAccess().getAsteriskKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAMultiplicativeExpressionAccess().getUADivideExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAMultiplicativeExpressionAccess().getSolidusKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAMultiplicativeExpressionAccess().getUAModuloExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='%' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUAMultiplicativeExpressionAccess().getPercentSignKeyword_1_0_2_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAMultiplicativeExpressionAccess().getRightUAPrefixExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_7_0=ruleUAPrefixExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"UAPrefixExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUAPrefixExpression
entryRuleUAPrefixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAPrefixExpressionRule()); }
	 iv_ruleUAPrefixExpression=ruleUAPrefixExpression 
	 { $current=$iv_ruleUAPrefixExpression.current; } 
	 EOF 
;

// Rule UAPrefixExpression
ruleUAPrefixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAPrefixExpressionAccess().getUAUnaryExpressionParserRuleCall_0()); 
    }
    this_UAUnaryExpression_0=ruleUAUnaryExpression
    { 
        $current = $this_UAUnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAPrefixExpressionAccess().getUAPreIncrementExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='++' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAPrefixExpressionAccess().getPlusSignPlusSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAPrefixExpressionAccess().getUAPreDecrementExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='--' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAPrefixExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAPrefixExpressionAccess().getExpressionUAPrefixExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleUAPrefixExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAPrefixExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"UAPrefixExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleUAUnaryExpression
entryRuleUAUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAUnaryExpressionRule()); }
	 iv_ruleUAUnaryExpression=ruleUAUnaryExpression 
	 { $current=$iv_ruleUAUnaryExpression.current; } 
	 EOF 
;

// Rule UAUnaryExpression
ruleUAUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAUnaryExpressionAccess().getUAPostfixExpressionParserRuleCall_0()); 
    }
    this_UAPostfixExpression_0=ruleUAPostfixExpression
    { 
        $current = $this_UAPostfixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAUnaryExpressionAccess().getUALogicNotExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAUnaryExpressionAccess().getExclamationMarkKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAUnaryExpressionAccess().getUAMinusExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAUnaryExpressionAccess().getHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getUAUnaryExpressionAccess().getExpressionUAUnaryExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleUAUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"UAUnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleUAPostfixExpression
entryRuleUAPostfixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAPostfixExpressionRule()); }
	 iv_ruleUAPostfixExpression=ruleUAPostfixExpression 
	 { $current=$iv_ruleUAPostfixExpression.current; } 
	 EOF 
;

// Rule UAPostfixExpression
ruleUAPostfixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAPostfixExpressionAccess().getUAStructExpressionParserRuleCall_0()); 
    }
    this_UAStructExpression_0=ruleUAStructExpression
    { 
        $current = $this_UAStructExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAPostfixExpressionAccess().getUAPostIncrementExpressionExpressionAction_1_0_0(),
            $current);
    }
)	otherlv_2='++' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAPostfixExpressionAccess().getPlusSignPlusSignKeyword_1_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAPostfixExpressionAccess().getUAPostDecrementExpressionExpressionAction_1_1_0(),
            $current);
    }
)	otherlv_4='--' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAPostfixExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_1());
    }
))*)
;





// Entry rule entryRuleUAStructExpression
entryRuleUAStructExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAStructExpressionRule()); }
	 iv_ruleUAStructExpression=ruleUAStructExpression 
	 { $current=$iv_ruleUAStructExpression.current; } 
	 EOF 
;

// Rule UAStructExpression
ruleUAStructExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAStructExpressionAccess().getUAArrayExpressionParserRuleCall_0()); 
    }
    this_UAArrayExpression_0=ruleUAArrayExpression
    { 
        $current = $this_UAArrayExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAStructExpressionAccess().getUAStructExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAStructExpressionAccess().getFullStopKeyword_1_1());
    }
(
(
		lv_right_3_0=RULE_ID
		{
			newLeafNode(lv_right_3_0, grammarAccess.getUAStructExpressionAccess().getRightIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAStructExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleUAArrayExpression
entryRuleUAArrayExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAArrayExpressionRule()); }
	 iv_ruleUAArrayExpression=ruleUAArrayExpression 
	 { $current=$iv_ruleUAArrayExpression.current; } 
	 EOF 
;

// Rule UAArrayExpression
ruleUAArrayExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAArrayExpressionAccess().getUAPrimaryExpressionParserRuleCall_0()); 
    }
    this_UAPrimaryExpression_0=ruleUAPrimaryExpression
    { 
        $current = $this_UAPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getUAArrayExpressionAccess().getUAArrayExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAArrayExpressionAccess().getLeftSquareBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAArrayExpressionAccess().getRightUAExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAArrayExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUAArrayExpressionAccess().getRightSquareBracketKeyword_1_3());
    }
)*)
;





// Entry rule entryRuleUAPrimaryExpression
entryRuleUAPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAPrimaryExpressionRule()); }
	 iv_ruleUAPrimaryExpression=ruleUAPrimaryExpression 
	 { $current=$iv_ruleUAPrimaryExpression.current; } 
	 EOF 
;

// Rule UAPrimaryExpression
ruleUAPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUAPrimaryExpressionAccess().getUAReferenceParserRuleCall_0()); 
    }
    this_UAReference_0=ruleUAReference
    { 
        $current = $this_UAReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUAPrimaryExpressionAccess().getUANumberLiteralParserRuleCall_1()); 
    }
    this_UANumberLiteral_1=ruleUANumberLiteral
    { 
        $current = $this_UANumberLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUAPrimaryExpressionAccess().getUABooleanLiteralParserRuleCall_2()); 
    }
    this_UABooleanLiteral_2=ruleUABooleanLiteral
    { 
        $current = $this_UABooleanLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getUAPrimaryExpressionAccess().getUAParenthesizedExpressionParserRuleCall_3()); 
    }
    this_UAParenthesizedExpression_3=ruleUAParenthesizedExpression
    { 
        $current = $this_UAParenthesizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUAReference
entryRuleUAReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAReferenceRule()); }
	 iv_ruleUAReference=ruleUAReference 
	 { $current=$iv_ruleUAReference.current; } 
	 EOF 
;

// Rule UAReference
ruleUAReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAReferenceAccess().getUAReferenceAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUAReferenceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUAReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleUABooleanLiteral
entryRuleUABooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUABooleanLiteralRule()); }
	 iv_ruleUABooleanLiteral=ruleUABooleanLiteral 
	 { $current=$iv_ruleUABooleanLiteral.current; } 
	 EOF 
;

// Rule UABooleanLiteral
ruleUABooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUABooleanLiteralAccess().getUABooleanLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUABooleanLiteralAccess().getValueBOOLParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBOOL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUABooleanLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BOOL");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBOOL
entryRuleBOOL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBOOLRule()); } 
	 iv_ruleBOOL=ruleBOOL 
	 { $current=$iv_ruleBOOL.current.getText(); }  
	 EOF 
;

// Rule BOOL
ruleBOOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleUANumberLiteral
entryRuleUANumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUANumberLiteralRule()); }
	 iv_ruleUANumberLiteral=ruleUANumberLiteral 
	 { $current=$iv_ruleUANumberLiteral.current; } 
	 EOF 
;

// Rule UANumberLiteral
ruleUANumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUANumberLiteralAccess().getUANumberLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getUANumberLiteralAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUANumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleUAParenthesizedExpression
entryRuleUAParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAParenthesizedExpressionRule()); }
	 iv_ruleUAParenthesizedExpression=ruleUAParenthesizedExpression 
	 { $current=$iv_ruleUAParenthesizedExpression.current; } 
	 EOF 
;

// Rule UAParenthesizedExpression
ruleUAParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUAParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getUAParenthesizedExpressionAccess().getUAExpressionParserRuleCall_1()); 
    }
    this_UAExpression_1=ruleUAExpression
    { 
        $current = $this_UAExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleUASelectList
entryRuleUASelectList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASelectListRule()); }
	 iv_ruleUASelectList=ruleUASelectList 
	 { $current=$iv_ruleUASelectList.current; } 
	 EOF 
;

// Rule UASelectList
ruleUASelectList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUASelectListAccess().getSelectsUASelectParserRuleCall_0_0()); 
	    }
		lv_selects_0_0=ruleUASelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASelectListRule());
	        }
       		add(
       			$current, 
       			"selects",
        		lv_selects_0_0, 
        		"UASelect");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUASelectListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUASelectListAccess().getSelectsUASelectParserRuleCall_1_1_0()); 
	    }
		lv_selects_2_0=ruleUASelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASelectListRule());
	        }
       		add(
       			$current, 
       			"selects",
        		lv_selects_2_0, 
        		"UASelect");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUASelect
entryRuleUASelect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASelectRule()); }
	 iv_ruleUASelect=ruleUASelect 
	 { $current=$iv_ruleUASelect.current; } 
	 EOF 
;

// Rule UASelect
ruleUASelect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUASelectAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUASelectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUASelectAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUASelectAccess().getTypeUATypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleUAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASelectRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"UAType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUAUpdate
entryRuleUAUpdate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUAUpdateRule()); }
	 iv_ruleUAUpdate=ruleUAUpdate 
	 { $current=$iv_ruleUAUpdate.current; } 
	 EOF 
;

// Rule UAUpdate
ruleUAUpdate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUAUpdateAccess().getUAUpdateAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getUAUpdateAccess().getExpressionsUAExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAUpdateRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUAUpdateAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUAUpdateAccess().getExpressionsUAExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_expressions_3_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUAUpdateRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_3_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleUASynchronisation
entryRuleUASynchronisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUASynchronisationRule()); }
	 iv_ruleUASynchronisation=ruleUASynchronisation 
	 { $current=$iv_ruleUASynchronisation.current; } 
	 EOF 
;

// Rule UASynchronisation
ruleUASynchronisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUASynchronisationAccess().getExpressionUAExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleUAExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASynchronisationRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"UAExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUASynchronisationAccess().getTypeUASynchronisationTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleUASynchronisationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUASynchronisationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"UASynchronisationType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Rule UASynchronisationType
ruleUASynchronisationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='!' 
	{
        $current = grammarAccess.getUASynchronisationTypeAccess().getEMISSIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUASynchronisationTypeAccess().getEMISSIONEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='?' 
	{
        $current = grammarAccess.getUASynchronisationTypeAccess().getRECEPTIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUASynchronisationTypeAccess().getRECEPTIONEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


