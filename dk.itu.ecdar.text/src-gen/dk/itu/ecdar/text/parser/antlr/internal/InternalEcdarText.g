/*
* generated by Xtext
*/
grammar InternalEcdarText;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.itu.ecdar.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.itu.ecdar.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.itu.ecdar.text.services.EcdarTextGrammarAccess;

}

@parser::members {

 	private EcdarTextGrammarAccess grammarAccess;
 	
    public InternalEcdarTextParser(TokenStream input, EcdarTextGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ETFile";	
   	}
   	
   	@Override
   	protected EcdarTextGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleETFile
entryRuleETFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETFileRule()); }
	 iv_ruleETFile=ruleETFile 
	 { $current=$iv_ruleETFile.current; } 
	 EOF 
;

// Rule ETFile
ruleETFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETFileAccess().getETFileAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETFileAccess().getImportsETImportParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleETImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFileRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"ETImport");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getETFileAccess().getDeclarationsETDeclarationsParserRuleCall_2_0()); 
	    }
		lv_declarations_2_0=ruleETDeclarations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFileRule());
	        }
       		set(
       			$current, 
       			"declarations",
        		lv_declarations_2_0, 
        		"ETDeclarations");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETFileAccess().getSpecificationsETSpecificationParserRuleCall_3_0()); 
	    }
		lv_specifications_3_0=ruleETSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFileRule());
	        }
       		add(
       			$current, 
       			"specifications",
        		lv_specifications_3_0, 
        		"ETSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleETImport
entryRuleETImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETImportRule()); }
	 iv_ruleETImport=ruleETImport 
	 { $current=$iv_ruleETImport.current; } 
	 EOF 
;

// Rule ETImport
ruleETImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETImportAccess().getImportKeyword_0());
    }
(
(
		lv_importedNamespace_1_0=RULE_ID
		{
			newLeafNode(lv_importedNamespace_1_0, grammarAccess.getETImportAccess().getImportedNamespaceIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleETArrayDeclaration
entryRuleETArrayDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETArrayDeclarationRule()); }
	 iv_ruleETArrayDeclaration=ruleETArrayDeclaration 
	 { $current=$iv_ruleETArrayDeclaration.current; } 
	 EOF 
;

// Rule ETArrayDeclaration
ruleETArrayDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETArrayDeclarationAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETArrayDeclarationAccess().getSizeETExpressionParserRuleCall_1_0()); 
	    }
		lv_size_1_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETArrayDeclarationRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_1_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETArrayDeclarationAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleETDeclarations
entryRuleETDeclarations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETDeclarationsRule()); }
	 iv_ruleETDeclarations=ruleETDeclarations 
	 { $current=$iv_ruleETDeclarations.current; } 
	 EOF 
;

// Rule ETDeclarations
ruleETDeclarations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETDeclarationsAccess().getETDeclarationsAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getETDeclarationsAccess().getDeclarationsETDeclarationParserRuleCall_1_0_0()); 
	    }
		lv_declarations_1_0=ruleETDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETDeclarationsRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_1_0, 
        		"ETDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETDeclarationsAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETDeclarationsAccess().getDeclarationsETDeclarationParserRuleCall_1_1_1_0()); 
	    }
		lv_declarations_3_0=ruleETDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETDeclarationsRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_3_0, 
        		"ETDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETDeclarationsAccess().getSemicolonKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleETDeclaration
entryRuleETDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETDeclarationRule()); }
	 iv_ruleETDeclaration=ruleETDeclaration 
	 { $current=$iv_ruleETDeclaration.current; } 
	 EOF 
;

// Rule ETDeclaration
ruleETDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETDeclarationAccess().getETVariableDeclarationParserRuleCall_0()); 
    }
    this_ETVariableDeclaration_0=ruleETVariableDeclaration
    { 
        $current = $this_ETVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETDeclarationAccess().getETTypeDeclarationParserRuleCall_1()); 
    }
    this_ETTypeDeclaration_1=ruleETTypeDeclaration
    { 
        $current = $this_ETTypeDeclaration_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleETType
entryRuleETType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETTypeRule()); }
	 iv_ruleETType=ruleETType 
	 { $current=$iv_ruleETType.current; } 
	 EOF 
;

// Rule ETType
ruleETType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeAccess().getModifiersETTypeModifiersParserRuleCall_0_0()); 
	    }
		lv_modifiers_0_0=ruleETTypeModifiers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeRule());
	        }
       		set(
       			$current, 
       			"modifiers",
        		lv_modifiers_0_0, 
        		"ETTypeModifiers");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeAccess().getIdentifierETTypeIdentifierParserRuleCall_1_0()); 
	    }
		lv_identifier_1_0=ruleETTypeIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_1_0, 
        		"ETTypeIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleETTypeModifiers
entryRuleETTypeModifiers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETTypeModifiersRule()); }
	 iv_ruleETTypeModifiers=ruleETTypeModifiers 
	 { $current=$iv_ruleETTypeModifiers.current; } 
	 EOF 
;

// Rule ETTypeModifiers
ruleETTypeModifiers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETTypeModifiersAccess().getETTypeModifiersAction_0(),
            $current);
    }
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 0);
	 				}
					({true}?=>(
(
		lv_urgent_2_0=	'urgent' 
    {
        newLeafNode(lv_urgent_2_0, grammarAccess.getETTypeModifiersAccess().getUrgentUrgentKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETTypeModifiersRule());
	        }
       		setWithLastConsumed($current, "urgent", true, "urgent");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 1);
	 				}
					({true}?=>(
(
		lv_meta_3_0=	'meta' 
    {
        newLeafNode(lv_meta_3_0, grammarAccess.getETTypeModifiersAccess().getMetaMetaKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETTypeModifiersRule());
	        }
       		setWithLastConsumed($current, "meta", true, "meta");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1(), 2);
	 				}
					({true}?=>(
(
		lv_const_4_0=	'const' 
    {
        newLeafNode(lv_const_4_0, grammarAccess.getETTypeModifiersAccess().getConstConstKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETTypeModifiersRule());
	        }
       		setWithLastConsumed($current, "const", true, "const");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getETTypeModifiersAccess().getUnorderedGroup_1());
	}

))
;





// Entry rule entryRuleETVariableDeclaration
entryRuleETVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETVariableDeclarationRule()); }
	 iv_ruleETVariableDeclaration=ruleETVariableDeclaration 
	 { $current=$iv_ruleETVariableDeclaration.current; } 
	 EOF 
;

// Rule ETVariableDeclaration
ruleETVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableDeclarationAccess().getTypeETTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableDeclarationAccess().getVariablesETVariableIDParserRuleCall_1_0()); 
	    }
		lv_variables_1_0=ruleETVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableDeclarationRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_1_0, 
        		"ETVariableID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETVariableDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableDeclarationAccess().getVariablesETVariableIDParserRuleCall_2_1_0()); 
	    }
		lv_variables_3_0=ruleETVariableID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableDeclarationRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_3_0, 
        		"ETVariableID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETVariableID
entryRuleETVariableID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETVariableIDRule()); }
	 iv_ruleETVariableID=ruleETVariableID 
	 { $current=$iv_ruleETVariableID.current; } 
	 EOF 
;

// Rule ETVariableID
ruleETVariableID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getETVariableIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETVariableIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableIDAccess().getIoTypeETIOTypeEnumRuleCall_1_0()); 
	    }
		lv_ioType_1_0=ruleETIOType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableIDRule());
	        }
       		set(
       			$current, 
       			"ioType",
        		lv_ioType_1_0, 
        		"ETIOType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableIDAccess().getDimensionsETArrayDeclarationParserRuleCall_2_0()); 
	    }
		lv_dimensions_2_0=ruleETArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_2_0, 
        		"ETArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getETVariableIDAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETVariableIDAccess().getInitialiserETInitialiserParserRuleCall_3_1_0()); 
	    }
		lv_initialiser_4_0=ruleETInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETVariableIDRule());
	        }
       		set(
       			$current, 
       			"initialiser",
        		lv_initialiser_4_0, 
        		"ETInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleETInitialiser
entryRuleETInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETInitialiserRule()); }
	 iv_ruleETInitialiser=ruleETInitialiser 
	 { $current=$iv_ruleETInitialiser.current; } 
	 EOF 
;

// Rule ETInitialiser
ruleETInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETInitialiserAccess().getETSingleInitialiserParserRuleCall_0()); 
    }
    this_ETSingleInitialiser_0=ruleETSingleInitialiser
    { 
        $current = $this_ETSingleInitialiser_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETInitialiserAccess().getETMultiInitialiserParserRuleCall_1()); 
    }
    this_ETMultiInitialiser_1=ruleETMultiInitialiser
    { 
        $current = $this_ETMultiInitialiser_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleETSingleInitialiser
entryRuleETSingleInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSingleInitialiserRule()); }
	 iv_ruleETSingleInitialiser=ruleETSingleInitialiser 
	 { $current=$iv_ruleETSingleInitialiser.current; } 
	 EOF 
;

// Rule ETSingleInitialiser
ruleETSingleInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSingleInitialiserAccess().getExpressionETExpressionParserRuleCall_0()); 
	    }
		lv_expression_0_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSingleInitialiserRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleETMultiInitialiser
entryRuleETMultiInitialiser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETMultiInitialiserRule()); }
	 iv_ruleETMultiInitialiser=ruleETMultiInitialiser 
	 { $current=$iv_ruleETMultiInitialiser.current; } 
	 EOF 
;

// Rule ETMultiInitialiser
ruleETMultiInitialiser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETMultiInitialiserAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETMultiInitialiserAccess().getInitialisersETInitialiserParserRuleCall_1_0()); 
	    }
		lv_initialisers_1_0=ruleETInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETMultiInitialiserRule());
	        }
       		add(
       			$current, 
       			"initialisers",
        		lv_initialisers_1_0, 
        		"ETInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETMultiInitialiserAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETMultiInitialiserAccess().getInitialisersETInitialiserParserRuleCall_2_1_0()); 
	    }
		lv_initialisers_3_0=ruleETInitialiser		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETMultiInitialiserRule());
	        }
       		add(
       			$current, 
       			"initialisers",
        		lv_initialisers_3_0, 
        		"ETInitialiser");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETMultiInitialiserAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleETTypeDeclaration
entryRuleETTypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETTypeDeclarationRule()); }
	 iv_ruleETTypeDeclaration=ruleETTypeDeclaration 
	 { $current=$iv_ruleETTypeDeclaration.current; } 
	 EOF 
;

// Rule ETTypeDeclaration
ruleETTypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='typedef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETTypeDeclarationAccess().getTypedefKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeDeclarationAccess().getBaseTypeETTypeParserRuleCall_1_0()); 
	    }
		lv_baseType_1_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"baseType",
        		lv_baseType_1_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeDeclarationAccess().getTypesETTypeIDParserRuleCall_2_0()); 
	    }
		lv_types_2_0=ruleETTypeID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_2_0, 
        		"ETTypeID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getETTypeDeclarationAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeDeclarationAccess().getTypesETTypeIDParserRuleCall_3_1_0()); 
	    }
		lv_types_4_0=ruleETTypeID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"ETTypeID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETTypeID
entryRuleETTypeID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETTypeIDRule()); }
	 iv_ruleETTypeID=ruleETTypeID 
	 { $current=$iv_ruleETTypeID.current; } 
	 EOF 
;

// Rule ETTypeID
ruleETTypeID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getETTypeIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETTypeIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETTypeIDAccess().getDimensionsETArrayDeclarationParserRuleCall_1_0()); 
	    }
		lv_dimensions_1_0=ruleETArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETTypeIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_1_0, 
        		"ETArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleETTypeIdentifier
entryRuleETTypeIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETTypeIdentifierRule()); }
	 iv_ruleETTypeIdentifier=ruleETTypeIdentifier 
	 { $current=$iv_ruleETTypeIdentifier.current; } 
	 EOF 
;

// Rule ETTypeIdentifier
ruleETTypeIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETIntegerTypeParserRuleCall_0()); 
    }
    this_ETIntegerType_0=ruleETIntegerType
    { 
        $current = $this_ETIntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETClockTypeParserRuleCall_1()); 
    }
    this_ETClockType_1=ruleETClockType
    { 
        $current = $this_ETClockType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETActionTypeParserRuleCall_2()); 
    }
    this_ETActionType_2=ruleETActionType
    { 
        $current = $this_ETActionType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETBooleanTypeParserRuleCall_3()); 
    }
    this_ETBooleanType_3=ruleETBooleanType
    { 
        $current = $this_ETBooleanType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETScalarTypeParserRuleCall_4()); 
    }
    this_ETScalarType_4=ruleETScalarType
    { 
        $current = $this_ETScalarType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETTypeIdentifierAccess().getETStructTypeParserRuleCall_5()); 
    }
    this_ETStructType_5=ruleETStructType
    { 
        $current = $this_ETStructType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETTypeIdentifierAccess().getETTypeReferenceAction_6_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETTypeIdentifierRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getETTypeIdentifierAccess().getTargetETTypeIDCrossReference_6_1_0()); 
	}

)
)))
;





// Entry rule entryRuleETIntegerType
entryRuleETIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETIntegerTypeRule()); }
	 iv_ruleETIntegerType=ruleETIntegerType 
	 { $current=$iv_ruleETIntegerType.current; } 
	 EOF 
;

// Rule ETIntegerType
ruleETIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETIntegerTypeAccess().getETIntegerTypeAction_0(),
            $current);
    }
)	otherlv_1='int' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETIntegerTypeAccess().getIntKeyword_1());
    }
(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETIntegerTypeAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETIntegerTypeAccess().getMinETExpressionParserRuleCall_2_1_0()); 
	    }
		lv_min_3_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"min",
        		lv_min_3_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETIntegerTypeAccess().getCommaKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETIntegerTypeAccess().getMaxETExpressionParserRuleCall_2_3_0()); 
	    }
		lv_max_5_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETIntegerTypeRule());
	        }
       		set(
       			$current, 
       			"max",
        		lv_max_5_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETIntegerTypeAccess().getRightSquareBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleETClockType
entryRuleETClockType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETClockTypeRule()); }
	 iv_ruleETClockType=ruleETClockType 
	 { $current=$iv_ruleETClockType.current; } 
	 EOF 
;

// Rule ETClockType
ruleETClockType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETClockTypeAccess().getETClockTypeAction_0(),
            $current);
    }
)	otherlv_1='clock' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETClockTypeAccess().getClockKeyword_1());
    }
)
;





// Entry rule entryRuleETActionType
entryRuleETActionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETActionTypeRule()); }
	 iv_ruleETActionType=ruleETActionType 
	 { $current=$iv_ruleETActionType.current; } 
	 EOF 
;

// Rule ETActionType
ruleETActionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETActionTypeAccess().getETInputTypeParserRuleCall_0()); 
    }
    this_ETInputType_0=ruleETInputType
    { 
        $current = $this_ETInputType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETActionTypeAccess().getETOutputTypeParserRuleCall_1()); 
    }
    this_ETOutputType_1=ruleETOutputType
    { 
        $current = $this_ETOutputType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETActionTypeAccess().getETActionTypeAction_2_0(),
            $current);
    }
)	otherlv_3='action' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getETActionTypeAccess().getActionKeyword_2_1());
    }
))
;





// Entry rule entryRuleETInputType
entryRuleETInputType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETInputTypeRule()); }
	 iv_ruleETInputType=ruleETInputType 
	 { $current=$iv_ruleETInputType.current; } 
	 EOF 
;

// Rule ETInputType
ruleETInputType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETInputTypeAccess().getETInputTypeAction_0(),
            $current);
    }
)	otherlv_1='input' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETInputTypeAccess().getInputKeyword_1());
    }
)
;





// Entry rule entryRuleETOutputType
entryRuleETOutputType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETOutputTypeRule()); }
	 iv_ruleETOutputType=ruleETOutputType 
	 { $current=$iv_ruleETOutputType.current; } 
	 EOF 
;

// Rule ETOutputType
ruleETOutputType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETOutputTypeAccess().getETOutputTypeAction_0(),
            $current);
    }
)	otherlv_1='output' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETOutputTypeAccess().getOutputKeyword_1());
    }
)
;





// Entry rule entryRuleETBooleanType
entryRuleETBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBooleanTypeRule()); }
	 iv_ruleETBooleanType=ruleETBooleanType 
	 { $current=$iv_ruleETBooleanType.current; } 
	 EOF 
;

// Rule ETBooleanType
ruleETBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETBooleanTypeAccess().getETBooleanTypeAction_0(),
            $current);
    }
)	otherlv_1='bool' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETBooleanTypeAccess().getBoolKeyword_1());
    }
)
;





// Entry rule entryRuleETScalarType
entryRuleETScalarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETScalarTypeRule()); }
	 iv_ruleETScalarType=ruleETScalarType 
	 { $current=$iv_ruleETScalarType.current; } 
	 EOF 
;

// Rule ETScalarType
ruleETScalarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETScalarTypeAccess().getETScalarTypeAction_0(),
            $current);
    }
)	otherlv_1='scalar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETScalarTypeAccess().getScalarKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETScalarTypeAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETScalarTypeAccess().getSizeETExpressionParserRuleCall_3_0()); 
	    }
		lv_size_3_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETScalarTypeRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETScalarTypeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleETStructType
entryRuleETStructType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETStructTypeRule()); }
	 iv_ruleETStructType=ruleETStructType 
	 { $current=$iv_ruleETStructType.current; } 
	 EOF 
;

// Rule ETStructType
ruleETStructType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETStructTypeAccess().getETStructTypeAction_0(),
            $current);
    }
)	otherlv_1='struct' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETStructTypeAccess().getStructKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETStructTypeAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETStructTypeAccess().getDeclarationsETFieldDeclarationParserRuleCall_3_0()); 
	    }
		lv_declarations_3_0=ruleETFieldDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETStructTypeRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_3_0, 
        		"ETFieldDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETStructTypeAccess().getSemicolonKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETStructTypeAccess().getDeclarationsETFieldDeclarationParserRuleCall_4_1_0()); 
	    }
		lv_declarations_5_0=ruleETFieldDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETStructTypeRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_5_0, 
        		"ETFieldDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETStructTypeAccess().getSemicolonKeyword_5());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getETStructTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleETFieldDeclaration
entryRuleETFieldDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETFieldDeclarationRule()); }
	 iv_ruleETFieldDeclaration=ruleETFieldDeclaration 
	 { $current=$iv_ruleETFieldDeclaration.current; } 
	 EOF 
;

// Rule ETFieldDeclaration
ruleETFieldDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getETFieldDeclarationAccess().getTypeETTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFieldDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETFieldDeclarationAccess().getFieldsETFieldIDParserRuleCall_1_0()); 
	    }
		lv_fields_1_0=ruleETFieldID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFieldDeclarationRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"ETFieldID");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETFieldDeclarationAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETFieldDeclarationAccess().getFieldsETFieldIDParserRuleCall_2_1_0()); 
	    }
		lv_fields_3_0=ruleETFieldID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFieldDeclarationRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_3_0, 
        		"ETFieldID");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETFieldID
entryRuleETFieldID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETFieldIDRule()); }
	 iv_ruleETFieldID=ruleETFieldID 
	 { $current=$iv_ruleETFieldID.current; } 
	 EOF 
;

// Rule ETFieldID
ruleETFieldID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getETFieldIDAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETFieldIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETFieldIDAccess().getIoTypeETIOTypeEnumRuleCall_1_0()); 
	    }
		lv_ioType_1_0=ruleETIOType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFieldIDRule());
	        }
       		set(
       			$current, 
       			"ioType",
        		lv_ioType_1_0, 
        		"ETIOType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getETFieldIDAccess().getDimensionsETArrayDeclarationParserRuleCall_2_0()); 
	    }
		lv_dimensions_2_0=ruleETArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETFieldIDRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_2_0, 
        		"ETArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleETSpecificationExpression
entryRuleETSpecificationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationExpressionRule()); }
	 iv_ruleETSpecificationExpression=ruleETSpecificationExpression 
	 { $current=$iv_ruleETSpecificationExpression.current; } 
	 EOF 
;

// Rule ETSpecificationExpression
ruleETSpecificationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETSpecificationExpressionAccess().getETSpecificationDisjunctionExpressionParserRuleCall_0()); 
    }
    this_ETSpecificationDisjunctionExpression_0=ruleETSpecificationDisjunctionExpression
    { 
        $current = $this_ETSpecificationDisjunctionExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETSpecificationExpressionAccess().getETSpecificationDisjunctionExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationExpressionAccess().getVerticalLineVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationExpressionAccess().getRightETSpecificationDisjunctionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleETSpecificationDisjunctionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETSpecificationDisjunctionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETSpecificationDisjunctionExpression
entryRuleETSpecificationDisjunctionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationDisjunctionExpressionRule()); }
	 iv_ruleETSpecificationDisjunctionExpression=ruleETSpecificationDisjunctionExpression 
	 { $current=$iv_ruleETSpecificationDisjunctionExpression.current; } 
	 EOF 
;

// Rule ETSpecificationDisjunctionExpression
ruleETSpecificationDisjunctionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETSpecificationDisjunctionExpressionAccess().getETSpecificationCompositionExpressionParserRuleCall_0()); 
    }
    this_ETSpecificationCompositionExpression_0=ruleETSpecificationCompositionExpression
    { 
        $current = $this_ETSpecificationCompositionExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETSpecificationDisjunctionExpressionAccess().getETSpecificationConjunctionExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationDisjunctionExpressionAccess().getAmpersandAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationDisjunctionExpressionAccess().getRightETSpecificationCompositionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleETSpecificationCompositionExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationDisjunctionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETSpecificationCompositionExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETSpecificationCompositionExpression
entryRuleETSpecificationCompositionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationCompositionExpressionRule()); }
	 iv_ruleETSpecificationCompositionExpression=ruleETSpecificationCompositionExpression 
	 { $current=$iv_ruleETSpecificationCompositionExpression.current; } 
	 EOF 
;

// Rule ETSpecificationCompositionExpression
ruleETSpecificationCompositionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETSpecificationCompositionExpressionAccess().getETPrimarySpecificationExpressionParserRuleCall_0()); 
    }
    this_ETPrimarySpecificationExpression_0=ruleETPrimarySpecificationExpression
    { 
        $current = $this_ETPrimarySpecificationExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETSpecificationCompositionExpressionAccess().getETSpecificationCompositionExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationCompositionExpressionAccess().getVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationCompositionExpressionAccess().getRightETPrimarySpecificationExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleETPrimarySpecificationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationCompositionExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETPrimarySpecificationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETPrimarySpecificationExpression
entryRuleETPrimarySpecificationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETPrimarySpecificationExpressionRule()); }
	 iv_ruleETPrimarySpecificationExpression=ruleETPrimarySpecificationExpression 
	 { $current=$iv_ruleETPrimarySpecificationExpression.current; } 
	 EOF 
;

// Rule ETPrimarySpecificationExpression
ruleETPrimarySpecificationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETPrimarySpecificationExpressionAccess().getETSpecificationReferenceParserRuleCall_0()); 
    }
    this_ETSpecificationReference_0=ruleETSpecificationReference
    { 
        $current = $this_ETSpecificationReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETPrimarySpecificationExpressionAccess().getETSpecificationInstantiationParserRuleCall_1()); 
    }
    this_ETSpecificationInstantiation_1=ruleETSpecificationInstantiation
    { 
        $current = $this_ETSpecificationInstantiation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETPrimarySpecificationExpressionAccess().getLeftParenthesisKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getETPrimarySpecificationExpressionAccess().getETSpecificationExpressionParserRuleCall_2_1()); 
    }
    this_ETSpecificationExpression_3=ruleETSpecificationExpression
    { 
        $current = $this_ETSpecificationExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETPrimarySpecificationExpressionAccess().getRightParenthesisKeyword_2_2());
    }
))
;





// Entry rule entryRuleETSpecificationReference
entryRuleETSpecificationReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationReferenceRule()); }
	 iv_ruleETSpecificationReference=ruleETSpecificationReference 
	 { $current=$iv_ruleETSpecificationReference.current; } 
	 EOF 
;

// Rule ETSpecificationReference
ruleETSpecificationReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETSpecificationReferenceAccess().getETSpecificationReferenceAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSpecificationReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getETSpecificationReferenceAccess().getSpecificationETSpecificationCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleETSpecificationInstantiation
entryRuleETSpecificationInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationInstantiationRule()); }
	 iv_ruleETSpecificationInstantiation=ruleETSpecificationInstantiation 
	 { $current=$iv_ruleETSpecificationInstantiation.current; } 
	 EOF 
;

// Rule ETSpecificationInstantiation
ruleETSpecificationInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETSpecificationInstantiationAccess().getETSpecificationInstantiationAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSpecificationInstantiationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getETSpecificationInstantiationAccess().getTemplateETSpecificationTemplateCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationInstantiationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationInstantiationAccess().getArgumentsETExpressionParserRuleCall_3_0_0()); 
	    }
		lv_arguments_3_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationInstantiationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETSpecificationInstantiationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationInstantiationAccess().getArgumentsETExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_arguments_5_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationInstantiationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETSpecificationInstantiationAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleETSpecification
entryRuleETSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationRule()); }
	 iv_ruleETSpecification=ruleETSpecification 
	 { $current=$iv_ruleETSpecification.current; } 
	 EOF 
;

// Rule ETSpecification
ruleETSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETSpecificationAccess().getETSpecificationBindingParserRuleCall_0()); 
    }
    this_ETSpecificationBinding_0=ruleETSpecificationBinding
    { 
        $current = $this_ETSpecificationBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETSpecificationAccess().getETSpecificationDefinitionParserRuleCall_1()); 
    }
    this_ETSpecificationDefinition_1=ruleETSpecificationDefinition
    { 
        $current = $this_ETSpecificationDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleETSpecificationBinding
entryRuleETSpecificationBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationBindingRule()); }
	 iv_ruleETSpecificationBinding=ruleETSpecificationBinding 
	 { $current=$iv_ruleETSpecificationBinding.current; } 
	 EOF 
;

// Rule ETSpecificationBinding
ruleETSpecificationBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='let' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETSpecificationBindingAccess().getLetKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getETSpecificationBindingAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSpecificationBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationBindingAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationBindingAccess().getExpressionETSpecificationExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleETSpecificationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationBindingRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"ETSpecificationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleETSpecificationDefinition
entryRuleETSpecificationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationDefinitionRule()); }
	 iv_ruleETSpecificationDefinition=ruleETSpecificationDefinition 
	 { $current=$iv_ruleETSpecificationDefinition.current; } 
	 EOF 
;

// Rule ETSpecificationDefinition
ruleETSpecificationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETSpecificationDefinitionAccess().getETSpecificationTemplateParserRuleCall_0()); 
    }
    this_ETSpecificationTemplate_0=ruleETSpecificationTemplate
    { 
        $current = $this_ETSpecificationTemplate_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETSpecificationDefinitionAccess().getETSpecificationDefinitionAction_1_0(),
            $current);
    }
)	otherlv_2='spec' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationDefinitionAccess().getSpecKeyword_1_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getETSpecificationDefinitionAccess().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSpecificationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationDefinitionAccess().getBodyETSpecificationBodyParserRuleCall_1_3_0()); 
	    }
		lv_body_4_0=ruleETSpecificationBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"ETSpecificationBody");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleETSpecificationTemplate
entryRuleETSpecificationTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationTemplateRule()); }
	 iv_ruleETSpecificationTemplate=ruleETSpecificationTemplate 
	 { $current=$iv_ruleETSpecificationTemplate.current; } 
	 EOF 
;

// Rule ETSpecificationTemplate
ruleETSpecificationTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETSpecificationTemplateAccess().getETSpecificationTemplateAction_0(),
            $current);
    }
)	otherlv_1='template' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETSpecificationTemplateAccess().getTemplateKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getETSpecificationTemplateAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSpecificationTemplateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getETSpecificationTemplateAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationTemplateAccess().getParametersETParameterParserRuleCall_4_0_0()); 
	    }
		lv_parameters_4_0=ruleETParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationTemplateRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_4_0, 
        		"ETParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getETSpecificationTemplateAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationTemplateAccess().getParametersETParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_parameters_6_0=ruleETParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationTemplateRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"ETParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getETSpecificationTemplateAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationTemplateAccess().getBodyETSpecificationBodyParserRuleCall_6_0()); 
	    }
		lv_body_8_0=ruleETSpecificationBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationTemplateRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"ETSpecificationBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleETSpecificationBody
entryRuleETSpecificationBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSpecificationBodyRule()); }
	 iv_ruleETSpecificationBody=ruleETSpecificationBody 
	 { $current=$iv_ruleETSpecificationBody.current; } 
	 EOF 
;

// Rule ETSpecificationBody
ruleETSpecificationBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETSpecificationBodyAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationBodyAccess().getDeclarationsETDeclarationsParserRuleCall_1_0()); 
	    }
		lv_declarations_1_0=ruleETDeclarations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationBodyRule());
	        }
       		set(
       			$current, 
       			"declarations",
        		lv_declarations_1_0, 
        		"ETDeclarations");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='initial' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETSpecificationBodyAccess().getInitialKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationBodyAccess().getInitialLocationETLocationParserRuleCall_3_0()); 
	    }
		lv_initialLocation_3_0=ruleETLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationBodyRule());
	        }
       		set(
       			$current, 
       			"initialLocation",
        		lv_initialLocation_3_0, 
        		"ETLocation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETSpecificationBodyAccess().getLocationsETLocationParserRuleCall_4_0()); 
	    }
		lv_locations_4_0=ruleETLocation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSpecificationBodyRule());
	        }
       		add(
       			$current, 
       			"locations",
        		lv_locations_4_0, 
        		"ETLocation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getETSpecificationBodyAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleETParameter
entryRuleETParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETParameterRule()); }
	 iv_ruleETParameter=ruleETParameter 
	 { $current=$iv_ruleETParameter.current; } 
	 EOF 
;

// Rule ETParameter
ruleETParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getETParameterAccess().getTypeETTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getETParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETParameterAccess().getIoTypeETIOTypeEnumRuleCall_2_0()); 
	    }
		lv_ioType_2_0=ruleETIOType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETParameterRule());
	        }
       		set(
       			$current, 
       			"ioType",
        		lv_ioType_2_0, 
        		"ETIOType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getETParameterAccess().getDimensionsETArrayDeclarationParserRuleCall_3_0()); 
	    }
		lv_dimensions_3_0=ruleETArrayDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETParameterRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_3_0, 
        		"ETArrayDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleETLocation
entryRuleETLocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETLocationRule()); }
	 iv_ruleETLocation=ruleETLocation 
	 { $current=$iv_ruleETLocation.current; } 
	 EOF 
;

// Rule ETLocation
ruleETLocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getETLocationAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getETLocationAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getETLocationAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_urgent_1_0=	'urgent' 
    {
        newLeafNode(lv_urgent_1_0, grammarAccess.getETLocationAccess().getUrgentUrgentKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETLocationRule());
	        }
       		setWithLastConsumed($current, "urgent", true, "urgent");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETLocationAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getETLocationAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getETLocationAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		lv_universal_2_0=	'universal' 
    {
        newLeafNode(lv_universal_2_0, grammarAccess.getETLocationAccess().getUniversalUniversalKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETLocationRule());
	        }
       		setWithLastConsumed($current, "universal", true, "universal");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getETLocationAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getETLocationAccess().getUnorderedGroup_0());
	}

)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getETLocationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETLocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETLocationAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_5='invariant' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getETLocationAccess().getInvariantKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETLocationAccess().getInvariantsETExpressionParserRuleCall_3_1_0()); 
	    }
		lv_invariants_6_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLocationRule());
	        }
       		add(
       			$current, 
       			"invariants",
        		lv_invariants_6_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getETLocationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETLocationAccess().getInvariantsETExpressionParserRuleCall_3_2_1_0()); 
	    }
		lv_invariants_8_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLocationRule());
	        }
       		add(
       			$current, 
       			"invariants",
        		lv_invariants_8_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getETLocationAccess().getSemicolonKeyword_3_3());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getETLocationAccess().getEdgesETEdgeParserRuleCall_4_0_0()); 
	    }
		lv_edges_10_0=ruleETEdge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLocationRule());
	        }
       		add(
       			$current, 
       			"edges",
        		lv_edges_10_0, 
        		"ETEdge");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getETLocationAccess().getSemicolonKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETLocationAccess().getEdgesETEdgeParserRuleCall_4_1_1_0()); 
	    }
		lv_edges_12_0=ruleETEdge		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLocationRule());
	        }
       		add(
       			$current, 
       			"edges",
        		lv_edges_12_0, 
        		"ETEdge");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getETLocationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleETEdge
entryRuleETEdge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETEdgeRule()); }
	 iv_ruleETEdge=ruleETEdge 
	 { $current=$iv_ruleETEdge.current; } 
	 EOF 
;

// Rule ETEdge
ruleETEdge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_controllable_0_0=	'controllable' 
    {
        newLeafNode(lv_controllable_0_0, grammarAccess.getETEdgeAccess().getControllableControllableKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETEdgeRule());
	        }
       		setWithLastConsumed($current, "controllable", true, "controllable");
	    }

)
)?((	otherlv_1='foreach' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETEdgeAccess().getForeachKeyword_1_0_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETEdgeAccess().getLeftParenthesisKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getSelectsETSelectParserRuleCall_1_0_2_0()); 
	    }
		lv_selects_3_0=ruleETSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		add(
       			$current, 
       			"selects",
        		lv_selects_3_0, 
        		"ETSelect");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETEdgeAccess().getCommaKeyword_1_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getSelectsETSelectParserRuleCall_1_0_3_1_0()); 
	    }
		lv_selects_5_0=ruleETSelect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		add(
       			$current, 
       			"selects",
        		lv_selects_5_0, 
        		"ETSelect");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETEdgeAccess().getRightParenthesisKeyword_1_0_4());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getETEdgeAccess().getLeftCurlyBracketKeyword_1_0_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getIoETIOParserRuleCall_1_0_6_0()); 
	    }
		lv_io_8_0=ruleETIO		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		set(
       			$current, 
       			"io",
        		lv_io_8_0, 
        		"ETIO");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getETEdgeAccess().getColonKeyword_1_0_7());
    }
(	otherlv_10='if' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getETEdgeAccess().getIfKeyword_1_0_8_0());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getETEdgeAccess().getLeftParenthesisKeyword_1_0_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getGuardETExpressionParserRuleCall_1_0_8_2_0()); 
	    }
		lv_guard_12_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_12_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getETEdgeAccess().getRightParenthesisKeyword_1_0_8_3());
    }
)?((	otherlv_14='goto' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getETEdgeAccess().getGotoKeyword_1_0_9_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETEdgeRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getETEdgeAccess().getTargetETLocationCrossReference_1_0_9_0_1_0()); 
	}

)
))
    |(	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getETEdgeAccess().getLeftCurlyBracketKeyword_1_0_9_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getUpdatesETExpressionParserRuleCall_1_0_9_1_1_0_0()); 
	    }
		lv_updates_17_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		add(
       			$current, 
       			"updates",
        		lv_updates_17_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=';' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getETEdgeAccess().getSemicolonKeyword_1_0_9_1_1_1());
    }
)*	otherlv_19='goto' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getETEdgeAccess().getGotoKeyword_1_0_9_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETEdgeRule());
	        }
        }
	otherlv_20=RULE_ID
	{
		newLeafNode(otherlv_20, grammarAccess.getETEdgeAccess().getTargetETLocationCrossReference_1_0_9_1_3_0()); 
	}

)
)	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getETEdgeAccess().getRightCurlyBracketKeyword_1_0_9_1_4());
    }
))	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getETEdgeAccess().getRightCurlyBracketKeyword_1_0_10());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getIoETIOParserRuleCall_1_1_0_0()); 
	    }
		lv_io_23_0=ruleETIO		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		set(
       			$current, 
       			"io",
        		lv_io_23_0, 
        		"ETIO");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=':' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getETEdgeAccess().getColonKeyword_1_1_1());
    }
(	otherlv_25='if' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getETEdgeAccess().getIfKeyword_1_1_2_0());
    }
	otherlv_26='(' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getETEdgeAccess().getLeftParenthesisKeyword_1_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getGuardETExpressionParserRuleCall_1_1_2_2_0()); 
	    }
		lv_guard_27_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_27_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_28=')' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getETEdgeAccess().getRightParenthesisKeyword_1_1_2_3());
    }
)?((	otherlv_29='goto' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getETEdgeAccess().getGotoKeyword_1_1_3_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETEdgeRule());
	        }
        }
	otherlv_30=RULE_ID
	{
		newLeafNode(otherlv_30, grammarAccess.getETEdgeAccess().getTargetETLocationCrossReference_1_1_3_0_1_0()); 
	}

)
))
    |(	otherlv_31='{' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getETEdgeAccess().getLeftCurlyBracketKeyword_1_1_3_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getETEdgeAccess().getUpdatesETExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_updates_32_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEdgeRule());
	        }
       		add(
       			$current, 
       			"updates",
        		lv_updates_32_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_33=';' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getETEdgeAccess().getSemicolonKeyword_1_1_3_1_1_1());
    }
)*	otherlv_34='goto' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getETEdgeAccess().getGotoKeyword_1_1_3_1_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETEdgeRule());
	        }
        }
	otherlv_35=RULE_ID
	{
		newLeafNode(otherlv_35, grammarAccess.getETEdgeAccess().getTargetETLocationCrossReference_1_1_3_1_3_0()); 
	}

)
)	otherlv_36='}' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getETEdgeAccess().getRightCurlyBracketKeyword_1_1_3_1_4());
    }
)))))
;





// Entry rule entryRuleETIO
entryRuleETIO returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETIORule()); }
	 iv_ruleETIO=ruleETIO 
	 { $current=$iv_ruleETIO.current; } 
	 EOF 
;

// Rule ETIO
ruleETIO returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getETIOAccess().getExpressionETExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETIORule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETIOAccess().getTypeETIOTypeEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleETIOType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETIORule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ETIOType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleETSelect
entryRuleETSelect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETSelectRule()); }
	 iv_ruleETSelect=ruleETSelect 
	 { $current=$iv_ruleETSelect.current; } 
	 EOF 
;

// Rule ETSelect
ruleETSelect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getETSelectAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETSelectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getETSelectAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETSelectAccess().getTypeETTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETSelectRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleETExpression
entryRuleETExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETExpressionRule()); }
	 iv_ruleETExpression=ruleETExpression 
	 { $current=$iv_ruleETExpression.current; } 
	 EOF 
;

// Rule ETExpression
ruleETExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETExpressionAccess().getETImplyLogicOrExpressionParserRuleCall_0()); 
    }
    this_ETImplyLogicOrExpression_0=ruleETImplyLogicOrExpression
    { 
        $current = $this_ETImplyLogicOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETExpressionAccess().getETForallExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='forall' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETExpressionAccess().getForallKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETExpressionAccess().getETExistsExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='exists' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETExpressionAccess().getExistsKeyword_1_0_1_1());
    }
))	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getETExpressionAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getETExpressionAccess().getNameIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getETExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETExpressionAccess().getTypeETTypeParserRuleCall_1_4_0()); 
	    }
		lv_type_8_0=ruleETType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_8_0, 
        		"ETType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getETExpressionAccess().getRightParenthesisKeyword_1_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETExpressionAccess().getExpressionETExpressionParserRuleCall_1_6_0()); 
	    }
		lv_expression_10_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_10_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleETImplyLogicOrExpression
entryRuleETImplyLogicOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETImplyLogicOrExpressionRule()); }
	 iv_ruleETImplyLogicOrExpression=ruleETImplyLogicOrExpression 
	 { $current=$iv_ruleETImplyLogicOrExpression.current; } 
	 EOF 
;

// Rule ETImplyLogicOrExpression
ruleETImplyLogicOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETImplyLogicOrExpressionAccess().getETLogicAndExpression1ParserRuleCall_0()); 
    }
    this_ETLogicAndExpression1_0=ruleETLogicAndExpression1
    { 
        $current = $this_ETLogicAndExpression1_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETImplyLogicOrExpressionAccess().getETImplyExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='imply' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETImplyLogicOrExpressionAccess().getImplyKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETImplyLogicOrExpressionAccess().getETLogicOrExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='or' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETImplyLogicOrExpressionAccess().getOrKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETImplyLogicOrExpressionAccess().getRightETLogicAndExpression1ParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleETLogicAndExpression1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETImplyLogicOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"ETLogicAndExpression1");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETLogicAndExpression1
entryRuleETLogicAndExpression1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETLogicAndExpression1Rule()); }
	 iv_ruleETLogicAndExpression1=ruleETLogicAndExpression1 
	 { $current=$iv_ruleETLogicAndExpression1.current; } 
	 EOF 
;

// Rule ETLogicAndExpression1
ruleETLogicAndExpression1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETLogicAndExpression1Access().getETLogicNotExpression1ParserRuleCall_0()); 
    }
    this_ETLogicNotExpression1_0=ruleETLogicNotExpression1
    { 
        $current = $this_ETLogicNotExpression1_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETLogicAndExpression1Access().getETLogicAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='and' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETLogicAndExpression1Access().getAndKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETLogicAndExpression1Access().getRightETLogicNotExpression1ParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETLogicNotExpression1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLogicAndExpression1Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETLogicNotExpression1");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETLogicNotExpression1
entryRuleETLogicNotExpression1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETLogicNotExpression1Rule()); }
	 iv_ruleETLogicNotExpression1=ruleETLogicNotExpression1 
	 { $current=$iv_ruleETLogicNotExpression1.current; } 
	 EOF 
;

// Rule ETLogicNotExpression1
ruleETLogicNotExpression1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getETLogicNotExpression1Access().getETAssignmentExpressionParserRuleCall()); 
    }
    this_ETAssignmentExpression_0=ruleETAssignmentExpression
    { 
        $current = $this_ETAssignmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleETAssignmentExpression
entryRuleETAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETAssignmentExpressionRule()); }
	 iv_ruleETAssignmentExpression=ruleETAssignmentExpression 
	 { $current=$iv_ruleETAssignmentExpression.current; } 
	 EOF 
;

// Rule ETAssignmentExpression
ruleETAssignmentExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETAssignmentExpressionAccess().getETConditionalExpressionParserRuleCall_0()); 
    }
    this_ETConditionalExpression_0=ruleETConditionalExpression
    { 
        $current = $this_ETConditionalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETAssignmentExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETAssignmentExpressionAccess().getEqualsSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETAssignmentExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4=':=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETAssignmentExpressionAccess().getColonEqualsSignKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETAdditionAssignmentExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='+=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETAssignmentExpressionAccess().getPlusSignEqualsSignKeyword_1_0_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETSubtractionAssignmentExpressionLeftAction_1_0_3_0(),
            $current);
    }
)	otherlv_8='-=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getETAssignmentExpressionAccess().getHyphenMinusEqualsSignKeyword_1_0_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETMultiplicationAssignmentExpressionLeftAction_1_0_4_0(),
            $current);
    }
)	otherlv_10='*=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getETAssignmentExpressionAccess().getAsteriskEqualsSignKeyword_1_0_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETDivisionAssignmentExpressionLeftAction_1_0_5_0(),
            $current);
    }
)	otherlv_12='/=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getETAssignmentExpressionAccess().getSolidusEqualsSignKeyword_1_0_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETModuloAssignmentExpressionLeftAction_1_0_6_0(),
            $current);
    }
)	otherlv_14='%=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getETAssignmentExpressionAccess().getPercentSignEqualsSignKeyword_1_0_6_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETBitOrAssignmentExpressionLeftAction_1_0_7_0(),
            $current);
    }
)	otherlv_16='|=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getETAssignmentExpressionAccess().getVerticalLineEqualsSignKeyword_1_0_7_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETBitAndAssignmentExpressionLeftAction_1_0_8_0(),
            $current);
    }
)	otherlv_18='&=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getETAssignmentExpressionAccess().getAmpersandEqualsSignKeyword_1_0_8_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETBitXORAssignmentExpressionLeftAction_1_0_9_0(),
            $current);
    }
)	otherlv_20='^=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getETAssignmentExpressionAccess().getCircumflexAccentEqualsSignKeyword_1_0_9_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETBitLeftAssignmentExpressionLeftAction_1_0_10_0(),
            $current);
    }
)	otherlv_22='<<=' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getETAssignmentExpressionAccess().getLessThanSignLessThanSignEqualsSignKeyword_1_0_10_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAssignmentExpressionAccess().getETBitRightAssignmentExpressionLeftAction_1_0_11_0(),
            $current);
    }
)	otherlv_24='>>=' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getETAssignmentExpressionAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_1_0_11_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETAssignmentExpressionAccess().getRightETAssignmentExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_25_0=ruleETAssignmentExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_25_0, 
        		"ETAssignmentExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleETConditionalExpression
entryRuleETConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETConditionalExpressionRule()); }
	 iv_ruleETConditionalExpression=ruleETConditionalExpression 
	 { $current=$iv_ruleETConditionalExpression.current; } 
	 EOF 
;

// Rule ETConditionalExpression
ruleETConditionalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETConditionalExpressionAccess().getETLogicOrExpression2ParserRuleCall_0()); 
    }
    this_ETLogicOrExpression2_0=ruleETLogicOrExpression2
    { 
        $current = $this_ETLogicOrExpression2_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETConditionalExpressionAccess().getETConditionalExpressionConditionAction_1_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETConditionalExpressionAccess().getQuestionMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETConditionalExpressionAccess().getThenETLogicOrExpression2ParserRuleCall_1_2_0()); 
	    }
		lv_then_3_0=ruleETLogicOrExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"ETLogicOrExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETConditionalExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETConditionalExpressionAccess().getElseETConditionalExpressionParserRuleCall_1_4_0()); 
	    }
		lv_else_5_0=ruleETConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_5_0, 
        		"ETConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleETLogicOrExpression2
entryRuleETLogicOrExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETLogicOrExpression2Rule()); }
	 iv_ruleETLogicOrExpression2=ruleETLogicOrExpression2 
	 { $current=$iv_ruleETLogicOrExpression2.current; } 
	 EOF 
;

// Rule ETLogicOrExpression2
ruleETLogicOrExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETLogicOrExpression2Access().getETLogicAndExpression2ParserRuleCall_0()); 
    }
    this_ETLogicAndExpression2_0=ruleETLogicAndExpression2
    { 
        $current = $this_ETLogicAndExpression2_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETLogicOrExpression2Access().getETLogicOrExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETLogicOrExpression2Access().getVerticalLineVerticalLineKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETLogicOrExpression2Access().getRightETLogicAndExpression2ParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETLogicAndExpression2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLogicOrExpression2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETLogicAndExpression2");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETLogicAndExpression2
entryRuleETLogicAndExpression2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETLogicAndExpression2Rule()); }
	 iv_ruleETLogicAndExpression2=ruleETLogicAndExpression2 
	 { $current=$iv_ruleETLogicAndExpression2.current; } 
	 EOF 
;

// Rule ETLogicAndExpression2
ruleETLogicAndExpression2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETLogicAndExpression2Access().getETBitOrExpressionParserRuleCall_0()); 
    }
    this_ETBitOrExpression_0=ruleETBitOrExpression
    { 
        $current = $this_ETBitOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETLogicAndExpression2Access().getETLogicAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETLogicAndExpression2Access().getAmpersandAmpersandKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETLogicAndExpression2Access().getRightETBitOrExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETBitOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETLogicAndExpression2Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETBitOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETBitOrExpression
entryRuleETBitOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBitOrExpressionRule()); }
	 iv_ruleETBitOrExpression=ruleETBitOrExpression 
	 { $current=$iv_ruleETBitOrExpression.current; } 
	 EOF 
;

// Rule ETBitOrExpression
ruleETBitOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETBitOrExpressionAccess().getETBitXORExpressionParserRuleCall_0()); 
    }
    this_ETBitXORExpression_0=ruleETBitXORExpression
    { 
        $current = $this_ETBitXORExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETBitOrExpressionAccess().getETBitOrExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETBitOrExpressionAccess().getVerticalLineKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETBitOrExpressionAccess().getRightETBitXORExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETBitXORExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETBitOrExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETBitXORExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETBitXORExpression
entryRuleETBitXORExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBitXORExpressionRule()); }
	 iv_ruleETBitXORExpression=ruleETBitXORExpression 
	 { $current=$iv_ruleETBitXORExpression.current; } 
	 EOF 
;

// Rule ETBitXORExpression
ruleETBitXORExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETBitXORExpressionAccess().getETBitAndExpressionParserRuleCall_0()); 
    }
    this_ETBitAndExpression_0=ruleETBitAndExpression
    { 
        $current = $this_ETBitAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETBitXORExpressionAccess().getETBitXORExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='^' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETBitXORExpressionAccess().getCircumflexAccentKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETBitXORExpressionAccess().getRightETBitAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETBitAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETBitXORExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETBitAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETBitAndExpression
entryRuleETBitAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBitAndExpressionRule()); }
	 iv_ruleETBitAndExpression=ruleETBitAndExpression 
	 { $current=$iv_ruleETBitAndExpression.current; } 
	 EOF 
;

// Rule ETBitAndExpression
ruleETBitAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETBitAndExpressionAccess().getETEqualityExpressionParserRuleCall_0()); 
    }
    this_ETEqualityExpression_0=ruleETEqualityExpression
    { 
        $current = $this_ETEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETBitAndExpressionAccess().getETBitAndExpressionLeftAction_1_0_0(),
            $current);
    }
)	otherlv_2='&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETBitAndExpressionAccess().getAmpersandKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETBitAndExpressionAccess().getRightETEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleETEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETBitAndExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETEqualityExpression
entryRuleETEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETEqualityExpressionRule()); }
	 iv_ruleETEqualityExpression=ruleETEqualityExpression 
	 { $current=$iv_ruleETEqualityExpression.current; } 
	 EOF 
;

// Rule ETEqualityExpression
ruleETEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETEqualityExpressionAccess().getETInequalityExpressionParserRuleCall_0()); 
    }
    this_ETInequalityExpression_0=ruleETInequalityExpression
    { 
        $current = $this_ETInequalityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETEqualityExpressionAccess().getETEqualExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='==' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETEqualityExpressionAccess().getEqualsSignEqualsSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETEqualityExpressionAccess().getETUnequalExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='!=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETEqualityExpressionAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETEqualityExpressionAccess().getRightETInequalityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleETInequalityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"ETInequalityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETInequalityExpression
entryRuleETInequalityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETInequalityExpressionRule()); }
	 iv_ruleETInequalityExpression=ruleETInequalityExpression 
	 { $current=$iv_ruleETInequalityExpression.current; } 
	 EOF 
;

// Rule ETInequalityExpression
ruleETInequalityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETInequalityExpressionAccess().getETMinMaxExpressionParserRuleCall_0()); 
    }
    this_ETMinMaxExpression_0=ruleETMinMaxExpression
    { 
        $current = $this_ETMinMaxExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETInequalityExpressionAccess().getETLessExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETInequalityExpressionAccess().getLessThanSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETInequalityExpressionAccess().getETLessEqualExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='<=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETInequalityExpressionAccess().getLessThanSignEqualsSignKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETInequalityExpressionAccess().getETGreaterEqualExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='>=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETInequalityExpressionAccess().getGreaterThanSignEqualsSignKeyword_1_0_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETInequalityExpressionAccess().getETGreaterExpressionLeftAction_1_0_3_0(),
            $current);
    }
)	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getETInequalityExpressionAccess().getGreaterThanSignKeyword_1_0_3_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETInequalityExpressionAccess().getRightETMinMaxExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_9_0=ruleETMinMaxExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETInequalityExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"ETMinMaxExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETMinMaxExpression
entryRuleETMinMaxExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETMinMaxExpressionRule()); }
	 iv_ruleETMinMaxExpression=ruleETMinMaxExpression 
	 { $current=$iv_ruleETMinMaxExpression.current; } 
	 EOF 
;

// Rule ETMinMaxExpression
ruleETMinMaxExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETMinMaxExpressionAccess().getETBitLeftBRightExpressionParserRuleCall_0()); 
    }
    this_ETBitLeftBRightExpression_0=ruleETBitLeftBRightExpression
    { 
        $current = $this_ETBitLeftBRightExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETMinMaxExpressionAccess().getETMinExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETMinMaxExpressionAccess().getLessThanSignQuestionMarkKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETMinMaxExpressionAccess().getETMaxExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='>?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETMinMaxExpressionAccess().getGreaterThanSignQuestionMarkKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETMinMaxExpressionAccess().getRightETBitLeftBRightExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleETBitLeftBRightExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETMinMaxExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"ETBitLeftBRightExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETBitLeftBRightExpression
entryRuleETBitLeftBRightExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBitLeftBRightExpressionRule()); }
	 iv_ruleETBitLeftBRightExpression=ruleETBitLeftBRightExpression 
	 { $current=$iv_ruleETBitLeftBRightExpression.current; } 
	 EOF 
;

// Rule ETBitLeftBRightExpression
ruleETBitLeftBRightExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETBitLeftBRightExpressionAccess().getETAdditiveExpressionParserRuleCall_0()); 
    }
    this_ETAdditiveExpression_0=ruleETAdditiveExpression
    { 
        $current = $this_ETAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETBitLeftBRightExpressionAccess().getETBitLeftExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='<<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETBitLeftBRightExpressionAccess().getLessThanSignLessThanSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETBitLeftBRightExpressionAccess().getETBitRightExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='>>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETBitLeftBRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETBitLeftBRightExpressionAccess().getRightETAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleETAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETBitLeftBRightExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"ETAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETAdditiveExpression
entryRuleETAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETAdditiveExpressionRule()); }
	 iv_ruleETAdditiveExpression=ruleETAdditiveExpression 
	 { $current=$iv_ruleETAdditiveExpression.current; } 
	 EOF 
;

// Rule ETAdditiveExpression
ruleETAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETAdditiveExpressionAccess().getETMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_ETMultiplicativeExpression_0=ruleETMultiplicativeExpression
    { 
        $current = $this_ETMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAdditiveExpressionAccess().getETAddExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETAdditiveExpressionAccess().getPlusSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETAdditiveExpressionAccess().getETSubtractExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETAdditiveExpressionAccess().getHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETAdditiveExpressionAccess().getRightETMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_5_0=ruleETMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"ETMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETMultiplicativeExpression
entryRuleETMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETMultiplicativeExpressionRule()); }
	 iv_ruleETMultiplicativeExpression=ruleETMultiplicativeExpression 
	 { $current=$iv_ruleETMultiplicativeExpression.current; } 
	 EOF 
;

// Rule ETMultiplicativeExpression
ruleETMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETMultiplicativeExpressionAccess().getETPrefixExpressionParserRuleCall_0()); 
    }
    this_ETPrefixExpression_0=ruleETPrefixExpression
    { 
        $current = $this_ETPrefixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETMultiplicativeExpressionAccess().getETMultiplyExpressionLeftAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETMultiplicativeExpressionAccess().getAsteriskKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETMultiplicativeExpressionAccess().getETDivideExpressionLeftAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETMultiplicativeExpressionAccess().getSolidusKeyword_1_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETMultiplicativeExpressionAccess().getETModuloExpressionLeftAction_1_0_2_0(),
            $current);
    }
)	otherlv_6='%' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getETMultiplicativeExpressionAccess().getPercentSignKeyword_1_0_2_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETMultiplicativeExpressionAccess().getRightETPrefixExpressionParserRuleCall_1_1_0()); 
	    }
		lv_right_7_0=ruleETPrefixExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"ETPrefixExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleETPrefixExpression
entryRuleETPrefixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETPrefixExpressionRule()); }
	 iv_ruleETPrefixExpression=ruleETPrefixExpression 
	 { $current=$iv_ruleETPrefixExpression.current; } 
	 EOF 
;

// Rule ETPrefixExpression
ruleETPrefixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETPrefixExpressionAccess().getETUnaryExpressionParserRuleCall_0()); 
    }
    this_ETUnaryExpression_0=ruleETUnaryExpression
    { 
        $current = $this_ETUnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETPrefixExpressionAccess().getETPreIncrementExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='++' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETPrefixExpressionAccess().getPlusSignPlusSignKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETPrefixExpressionAccess().getETPreDecrementExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='--' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETPrefixExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETPrefixExpressionAccess().getExpressionETPrefixExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleETPrefixExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETPrefixExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ETPrefixExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleETUnaryExpression
entryRuleETUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETUnaryExpressionRule()); }
	 iv_ruleETUnaryExpression=ruleETUnaryExpression 
	 { $current=$iv_ruleETUnaryExpression.current; } 
	 EOF 
;

// Rule ETUnaryExpression
ruleETUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETUnaryExpressionAccess().getETPostfixExpressionParserRuleCall_0()); 
    }
    this_ETPostfixExpression_0=ruleETPostfixExpression
    { 
        $current = $this_ETPostfixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETUnaryExpressionAccess().getETLogicNotExpressionAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETUnaryExpressionAccess().getExclamationMarkKeyword_1_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETUnaryExpressionAccess().getETMinusExpressionAction_1_0_1_0(),
            $current);
    }
)	otherlv_4='-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETUnaryExpressionAccess().getHyphenMinusKeyword_1_0_1_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getETUnaryExpressionAccess().getExpressionETUnaryExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleETUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"ETUnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleETPostfixExpression
entryRuleETPostfixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETPostfixExpressionRule()); }
	 iv_ruleETPostfixExpression=ruleETPostfixExpression 
	 { $current=$iv_ruleETPostfixExpression.current; } 
	 EOF 
;

// Rule ETPostfixExpression
ruleETPostfixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETPostfixExpressionAccess().getETStructExpressionParserRuleCall_0()); 
    }
    this_ETStructExpression_0=ruleETStructExpression
    { 
        $current = $this_ETStructExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETPostfixExpressionAccess().getETPostIncrementExpressionExpressionAction_1_0_0(),
            $current);
    }
)	otherlv_2='++' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETPostfixExpressionAccess().getPlusSignPlusSignKeyword_1_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETPostfixExpressionAccess().getETPostDecrementExpressionExpressionAction_1_1_0(),
            $current);
    }
)	otherlv_4='--' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETPostfixExpressionAccess().getHyphenMinusHyphenMinusKeyword_1_1_1());
    }
))*)
;





// Entry rule entryRuleETStructExpression
entryRuleETStructExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETStructExpressionRule()); }
	 iv_ruleETStructExpression=ruleETStructExpression 
	 { $current=$iv_ruleETStructExpression.current; } 
	 EOF 
;

// Rule ETStructExpression
ruleETStructExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETStructExpressionAccess().getETArrayExpressionParserRuleCall_0()); 
    }
    this_ETArrayExpression_0=ruleETArrayExpression
    { 
        $current = $this_ETArrayExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETStructExpressionAccess().getETStructExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETStructExpressionAccess().getFullStopKeyword_1_1());
    }
(
(
		lv_right_3_0=RULE_ID
		{
			newLeafNode(lv_right_3_0, grammarAccess.getETStructExpressionAccess().getRightIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETStructExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleETArrayExpression
entryRuleETArrayExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETArrayExpressionRule()); }
	 iv_ruleETArrayExpression=ruleETArrayExpression 
	 { $current=$iv_ruleETArrayExpression.current; } 
	 EOF 
;

// Rule ETArrayExpression
ruleETArrayExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETArrayExpressionAccess().getETPrimaryExpressionParserRuleCall_0()); 
    }
    this_ETPrimaryExpression_0=ruleETPrimaryExpression
    { 
        $current = $this_ETPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getETArrayExpressionAccess().getETArrayExpressionLeftAction_1_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETArrayExpressionAccess().getLeftSquareBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getETArrayExpressionAccess().getRightETExpressionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleETExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETArrayExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"ETExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getETArrayExpressionAccess().getRightSquareBracketKeyword_1_3());
    }
)*)
;





// Entry rule entryRuleETPrimaryExpression
entryRuleETPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETPrimaryExpressionRule()); }
	 iv_ruleETPrimaryExpression=ruleETPrimaryExpression 
	 { $current=$iv_ruleETPrimaryExpression.current; } 
	 EOF 
;

// Rule ETPrimaryExpression
ruleETPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getETPrimaryExpressionAccess().getETReferenceParserRuleCall_0()); 
    }
    this_ETReference_0=ruleETReference
    { 
        $current = $this_ETReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETPrimaryExpressionAccess().getETNumberLiteralParserRuleCall_1()); 
    }
    this_ETNumberLiteral_1=ruleETNumberLiteral
    { 
        $current = $this_ETNumberLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETPrimaryExpressionAccess().getETBooleanLiteralParserRuleCall_2()); 
    }
    this_ETBooleanLiteral_2=ruleETBooleanLiteral
    { 
        $current = $this_ETBooleanLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getETPrimaryExpressionAccess().getETParenthesizedExpressionParserRuleCall_3()); 
    }
    this_ETParenthesizedExpression_3=ruleETParenthesizedExpression
    { 
        $current = $this_ETParenthesizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleETReference
entryRuleETReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETReferenceRule()); }
	 iv_ruleETReference=ruleETReference 
	 { $current=$iv_ruleETReference.current; } 
	 EOF 
;

// Rule ETReference
ruleETReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETReferenceAccess().getETReferenceAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getETReferenceRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getETReferenceAccess().getTargetEObjectCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleETBooleanLiteral
entryRuleETBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETBooleanLiteralRule()); }
	 iv_ruleETBooleanLiteral=ruleETBooleanLiteral 
	 { $current=$iv_ruleETBooleanLiteral.current; } 
	 EOF 
;

// Rule ETBooleanLiteral
ruleETBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETBooleanLiteralAccess().getETBooleanLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getETBooleanLiteralAccess().getValueBOOLParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleBOOL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getETBooleanLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BOOL");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBOOL
entryRuleBOOL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBOOLRule()); } 
	 iv_ruleBOOL=ruleBOOL 
	 { $current=$iv_ruleBOOL.current.getText(); }  
	 EOF 
;

// Rule BOOL
ruleBOOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleETNumberLiteral
entryRuleETNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETNumberLiteralRule()); }
	 iv_ruleETNumberLiteral=ruleETNumberLiteral 
	 { $current=$iv_ruleETNumberLiteral.current; } 
	 EOF 
;

// Rule ETNumberLiteral
ruleETNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getETNumberLiteralAccess().getETNumberLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_INT
		{
			newLeafNode(lv_value_1_0, grammarAccess.getETNumberLiteralAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getETNumberLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleETParenthesizedExpression
entryRuleETParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getETParenthesizedExpressionRule()); }
	 iv_ruleETParenthesizedExpression=ruleETParenthesizedExpression 
	 { $current=$iv_ruleETParenthesizedExpression.current; } 
	 EOF 
;

// Rule ETParenthesizedExpression
ruleETParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getETParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getETParenthesizedExpressionAccess().getETExpressionParserRuleCall_1()); 
    }
    this_ETExpression_1=ruleETExpression
    { 
        $current = $this_ETExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getETParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Rule ETIOType
ruleETIOType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='?' 
	{
        $current = grammarAccess.getETIOTypeAccess().getINPUTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getETIOTypeAccess().getINPUTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='!' 
	{
        $current = grammarAccess.getETIOTypeAccess().getOUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getETIOTypeAccess().getOUTPUTEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


